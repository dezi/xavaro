package de.xavaro.android.common;

import org.json.JSONObject;

public class PokemonProto
{
	public static JSONObject getProtos()
	{
		JSONObject json = new JSONObject();

		try
		{
			json.put(".POGOProtos.Data.AssetDigestEntry",new JSONObject("{'asset_id':{'id':1,'type':'string'},'bundle_name':{'id':2,'type':'string'},'version':{'id':3,'type':'int64'},'checksum':{'id':4,'type':'uint32'},'size':{'id':5,'type':'int32'},'key':{'id':6,'type':'bytes'}}"));
			json.put(".POGOProtos.Data.Battle.BattleAction",new JSONObject("{'Type':{'id':1,'type':'.POGOProtos.Data.Battle.BattleActionType'},'action_start_ms':{'id':2,'type':'int64'},'duration_ms':{'id':3,'type':'int32'},'energy_delta':{'id':5,'type':'int32'},'attacker_index':{'id':6,'type':'int32'},'target_index':{'id':7,'type':'int32'},'active_pokemon_id':{'id':8,'type':'uint64'},'player_joined':{'id':9,'type':'.POGOProtos.Data.Battle.BattleParticipant'},'battle_results':{'id':10,'type':'.POGOProtos.Data.Battle.BattleResults'},'damage_windows_start_timestamp_mss':{'id':11,'type':'int64'},'damage_windows_end_timestamp_mss':{'id':12,'type':'int64'},'player_left':{'id':13,'type':'.POGOProtos.Data.Battle.BattleParticipant'},'target_pokemon_id':{'id':14,'type':'uint64'}}"));
			json.put(".POGOProtos.Data.Battle.BattleActionType",new JSONObject("{'ACTION_UNSET':0,'ACTION_ATTACK':1,'ACTION_DODGE':2,'ACTION_SPECIAL_ATTACK':3,'ACTION_SWAP_POKEMON':4,'ACTION_FAINT':5,'ACTION_PLAYER_JOIN':6,'ACTION_PLAYER_QUIT':7,'ACTION_VICTORY':8,'ACTION_DEFEAT':9,'ACTION_TIMED_OUT':10}"));
			json.put(".POGOProtos.Data.Battle.BattleLog",new JSONObject("{'state':{'id':1,'type':'.POGOProtos.Data.Battle.BattleState'},'battle_type':{'id':2,'type':'.POGOProtos.Data.Battle.BattleType'},'server_ms':{'id':3,'type':'int64'},'battle_actions':{'id':4,'type':'.POGOProtos.Data.Battle.BattleAction','repeated':true},'battle_start_timestamp_ms':{'id':5,'type':'int64'},'battle_end_timestamp_ms':{'id':6,'type':'int64'}}"));
			json.put(".POGOProtos.Data.Battle.BattleParticipant",new JSONObject("{'active_pokemon':{'id':1,'type':'.POGOProtos.Data.Battle.BattlePokemonInfo'},'trainer_public_profile':{'id':2,'type':'.POGOProtos.Data.Player.PlayerPublicProfile'},'reverse_pokemon':{'id':3,'type':'.POGOProtos.Data.Battle.BattlePokemonInfo','repeated':true},'defeated_pokemon':{'id':4,'type':'.POGOProtos.Data.Battle.BattlePokemonInfo','repeated':true}}"));
			json.put(".POGOProtos.Data.Battle.BattlePokemonInfo",new JSONObject("{'pokemon_data':{'id':1,'type':'.POGOProtos.Data.PokemonData'},'current_health':{'id':2,'type':'int32'},'current_energy':{'id':3,'type':'int32'}}"));
			json.put(".POGOProtos.Data.Battle.BattleResults",new JSONObject("{'gym_state':{'id':1,'type':'.POGOProtos.Data.Gym.GymState'},'attackers':{'id':2,'type':'.POGOProtos.Data.Battle.BattleParticipant','repeated':true},'player_experience_awarded':{'id':3,'type':'int32','repeated':true},'next_defender_pokemon_id':{'id':4,'type':'int64'},'gym_points_delta':{'id':5,'type':'int32'}}"));
			json.put(".POGOProtos.Data.Battle.BattleState",new JSONObject("{'STATE_UNSET':0,'ACTIVE':1,'VICTORY':2,'DEFEATED':3,'TIMED_OUT':4}"));
			json.put(".POGOProtos.Data.Battle.BattleType",new JSONObject("{'BATTLE_TYPE_UNSET':0,'NORMAL':1,'TRAINING':2}"));
			json.put(".POGOProtos.Data.Capture.CaptureAward",new JSONObject("{'activity_type':{'id':1,'type':'.POGOProtos.Enums.ActivityType','repeated':true},'xp':{'id':2,'type':'int32','repeated':true},'candy':{'id':3,'type':'int32','repeated':true},'stardust':{'id':4,'type':'int32','repeated':true}}"));
			json.put(".POGOProtos.Data.Capture.CaptureProbability",new JSONObject("{'pokeball_type':{'id':1,'type':'.POGOProtos.Inventory.ItemId','repeated':true},'capture_probability':{'id':2,'type':'float','repeated':true},'reticle_difficulty_scale':{'id':12,'type':'double'}}"));
			json.put(".POGOProtos.Data.DownloadUrlEntry",new JSONObject("{'asset_id':{'id':1,'type':'string'},'url':{'id':2,'type':'string'},'size':{'id':3,'type':'int32'},'checksum':{'id':4,'type':'uint32'}}"));
			json.put(".POGOProtos.Data.Gym.GymMembership",new JSONObject("{'pokemon_data':{'id':1,'type':'.POGOProtos.Data.PokemonData'},'trainer_public_profile':{'id':2,'type':'.POGOProtos.Data.Player.PlayerPublicProfile'}}"));
			json.put(".POGOProtos.Data.Gym.GymState",new JSONObject("{'fort_data':{'id':1,'type':'.POGOProtos.Map.Fort.FortData'},'memberships':{'id':2,'type':'.POGOProtos.Data.Gym.GymMembership','repeated':true}}"));
			json.put(".POGOProtos.Data.Player.ContactSettings",new JSONObject("{'send_marketing_emails':{'id':1,'type':'bool'},'send_push_notifications':{'id':2,'type':'bool'}}"));
			json.put(".POGOProtos.Data.Player.Currency",new JSONObject("{'name':{'id':1,'type':'string'},'amount':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Data.Player.DailyBonus",new JSONObject("{'next_collected_timestamp_ms':{'id':1,'type':'int64'},'next_defender_bonus_collect_timestamp_ms':{'id':2,'type':'int64'}}"));
			json.put(".POGOProtos.Data.Player.EquippedBadge",new JSONObject("{'badge_type':{'id':1,'type':'.POGOProtos.Enums.BadgeType'},'level':{'id':2,'type':'int32'},'next_equip_change_allowed_timestamp_ms':{'id':3,'type':'int64'}}"));
			json.put(".POGOProtos.Data.Player.PlayerAvatar",new JSONObject("{'skin':{'id':2,'type':'int32'},'hair':{'id':3,'type':'int32'},'shirt':{'id':4,'type':'int32'},'pants':{'id':5,'type':'int32'},'hat':{'id':6,'type':'int32'},'shoes':{'id':7,'type':'int32'},'gender':{'id':8,'type':'.POGOProtos.Enums.Gender'},'eyes':{'id':9,'type':'int32'},'backpack':{'id':10,'type':'int32'}}"));
			json.put(".POGOProtos.Data.Player.PlayerCamera",new JSONObject("{'is_default_camera':{'id':1,'type':'bool'}}"));
			json.put(".POGOProtos.Data.Player.PlayerCurrency",new JSONObject("{'gems':{'id':1,'type':'int32'}}"));
			json.put(".POGOProtos.Data.Player.PlayerPublicProfile",new JSONObject("{'name':{'id':1,'type':'string'},'level':{'id':2,'type':'int32'},'avatar':{'id':3,'type':'.POGOProtos.Data.Player.PlayerAvatar'}}"));
			json.put(".POGOProtos.Data.Player.PlayerStats",new JSONObject("{'level':{'id':1,'type':'int32'},'experience':{'id':2,'type':'int64'},'prev_level_xp':{'id':3,'type':'int64'},'next_level_xp':{'id':4,'type':'int64'},'km_walked':{'id':5,'type':'float'},'pokemons_encountered':{'id':6,'type':'int32'},'unique_pokedex_entries':{'id':7,'type':'int32'},'pokemons_captured':{'id':8,'type':'int32'},'evolutions':{'id':9,'type':'int32'},'poke_stop_visits':{'id':10,'type':'int32'},'pokeballs_thrown':{'id':11,'type':'int32'},'eggs_hatched':{'id':12,'type':'int32'},'big_magikarp_caught':{'id':13,'type':'int32'},'battle_attack_won':{'id':14,'type':'int32'},'battle_attack_total':{'id':15,'type':'int32'},'battle_defended_won':{'id':16,'type':'int32'},'battle_training_won':{'id':17,'type':'int32'},'battle_training_total':{'id':18,'type':'int32'},'prestige_raised_total':{'id':19,'type':'int32'},'prestige_dropped_total':{'id':20,'type':'int32'},'pokemon_deployed':{'id':21,'type':'int32'},'pokemon_caught_by_type':{'id':22,'type':'bytes'},'small_rattata_caught':{'id':23,'type':'int32'}}"));
			json.put(".POGOProtos.Data.PlayerBadge",new JSONObject("{'badge_type':{'id':1,'type':'.POGOProtos.Enums.BadgeType'},'rank':{'id':2,'type':'int32'},'start_value':{'id':3,'type':'int32'},'end_value':{'id':4,'type':'int32'},'current_value':{'id':5,'type':'double'}}"));
			json.put(".POGOProtos.Data.PlayerData",new JSONObject("{'creation_timestamp_ms':{'id':1,'type':'int64'},'username':{'id':2,'type':'string'},'team':{'id':5,'type':'int32'},'tutorial_state':{'id':7,'type':'.POGOProtos.Enums.TutorialState','repeated':true},'avatar':{'id':8,'type':'.POGOProtos.Data.Player.PlayerAvatar'},'max_pokemon_storage':{'id':9,'type':'int32'},'max_item_storage':{'id':10,'type':'int32'},'daily_bonus':{'id':11,'type':'.POGOProtos.Data.Player.DailyBonus'},'equipped_badge':{'id':12,'type':'.POGOProtos.Data.Player.EquippedBadge'},'contact_settings':{'id':13,'type':'.POGOProtos.Data.Player.ContactSettings'},'currencies':{'id':14,'type':'.POGOProtos.Data.Player.Currency','repeated':true}}"));
			json.put(".POGOProtos.Data.PokedexEntry",new JSONObject("{'pokedex_entry_number':{'id':1,'type':'int32'},'times_encountered':{'id':2,'type':'int32'},'times_captured':{'id':3,'type':'int32'},'evolution_stone_pieces':{'id':4,'type':'int32'},'evolution_stones':{'id':5,'type':'int32'}}"));
			json.put(".POGOProtos.Data.PokemonData",new JSONObject("{'id':{'id':1,'type':'fixed64'},'pokemon_id':{'id':2,'type':'.POGOProtos.Enums.PokemonId'},'cp':{'id':3,'type':'int32'},'stamina':{'id':4,'type':'int32'},'stamina_max':{'id':5,'type':'int32'},'move_1':{'id':6,'type':'.POGOProtos.Enums.PokemonMove'},'move_2':{'id':7,'type':'.POGOProtos.Enums.PokemonMove'},'deployed_fort_id':{'id':8,'type':'int32'},'owner_name':{'id':9,'type':'string'},'is_egg':{'id':10,'type':'bool'},'egg_km_walked_target':{'id':11,'type':'double'},'egg_km_walked_start':{'id':12,'type':'double'},'origin':{'id':14,'type':'int32'},'height_m':{'id':15,'type':'float'},'weight_kg':{'id':16,'type':'float'},'individual_attack':{'id':17,'type':'int32'},'individual_defense':{'id':18,'type':'int32'},'individual_stamina':{'id':19,'type':'int32'},'cp_multiplier':{'id':20,'type':'float'},'pokeball':{'id':21,'type':'int32'},'captured_cell_id':{'id':22,'type':'uint64'},'battles_attacked':{'id':23,'type':'int32'},'battles_defended':{'id':24,'type':'int32'},'egg_incubator_id':{'id':25,'type':'string'},'creation_time_ms':{'id':26,'type':'uint64'},'num_upgrades':{'id':27,'type':'int32'},'additional_cp_multiplier':{'id':28,'type':'int32'},'favorite':{'id':29,'type':'int32'},'nickname':{'id':30,'type':'string'},'from_fort':{'id':31,'type':'int32'}}"));
			json.put(".POGOProtos.Enums.ActivityType",new JSONObject("{'ACTIVITY_UNKNOWN':0,'ACTIVITY_CATCH_POKEMON':1,'ACTIVITY_CATCH_LEGEND_POKEMON':2,'ACTIVITY_FLEE_POKEMON':3,'ACTIVITY_DEFEAT_FORT':4,'ACTIVITY_EVOLVE_POKEMON':5,'ACTIVITY_HATCH_EGG':6,'ACTIVITY_WALK_KM':7,'ACTIVITY_POKEDEX_ENTRY_NEW':8,'ACTIVITY_CATCH_FIRST_THROW':9,'ACTIVITY_CATCH_NICE_THROW':10,'ACTIVITY_CATCH_GREAT_THROW':11,'ACTIVITY_CATCH_EXCELLENT_THROW':12,'ACTIVITY_CATCH_CURVEBALL':13,'ACTIVITY_CATCH_FIRST_CATCH_OF_DAY':14,'ACTIVITY_CATCH_MILESTONE':15,'ACTIVITY_TRAIN_POKEMON':16,'ACTIVITY_SEARCH_FORT':17,'ACTIVITY_RELEASE_POKEMON':18,'ACTIVITY_HATCH_EGG_SMALL_BONUS':19,'ACTIVITY_HATCH_EGG_MEDIUM_BONUS':20,'ACTIVITY_HATCH_EGG_LARGE_BONUS':21,'ACTIVITY_DEFEAT_GYM_DEFENDER':22,'ACTIVITY_DEFEAT_GYM_LEADER':23}"));
			json.put(".POGOProtos.Enums.BadgeType",new JSONObject("{'BADGE_UNSET':0,'BADGE_TRAVEL_KM':1,'BADGE_POKEDEX_ENTRIES':2,'BADGE_CAPTURE_TOTAL':3,'BADGE_DEFEATED_FORT':4,'BADGE_EVOLVED_TOTAL':5,'BADGE_HATCHED_TOTAL':6,'BADGE_ENCOUNTERED_TOTAL':7,'BADGE_POKESTOPS_VISITED':8,'BADGE_UNIQUE_POKESTOPS':9,'BADGE_POKEBALL_THROWN':10,'BADGE_BIG_MAGIKARP':11,'BADGE_DEPLOYED_TOTAL':12,'BADGE_BATTLE_ATTACK_WON':13,'BADGE_BATTLE_TRAINING_WON':14,'BADGE_BATTLE_DEFEND_WON':15,'BADGE_PRESTIGE_RAISED':16,'BADGE_PRESTIGE_DROPPED':17,'BADGE_TYPE_NORMAL':18,'BADGE_TYPE_FIGHTING':19,'BADGE_TYPE_FLYING':20,'BADGE_TYPE_POISON':21,'BADGE_TYPE_GROUND':22,'BADGE_TYPE_ROCK':23,'BADGE_TYPE_BUG':24,'BADGE_TYPE_GHOST':25,'BADGE_TYPE_STEEL':26,'BADGE_TYPE_FIRE':27,'BADGE_TYPE_WATER':28,'BADGE_TYPE_GRASS':29,'BADGE_TYPE_ELECTRIC':30,'BADGE_TYPE_PSYCHIC':31,'BADGE_TYPE_ICE':32,'BADGE_TYPE_DRAGON':33,'BADGE_TYPE_DARK':34,'BADGE_TYPE_FAIRY':35,'BADGE_SMALL_RATTATA':36,'BADGE_PIKACHU':37}"));
			json.put(".POGOProtos.Enums.CameraInterpolation",new JSONObject("{'CAM_INTERP_CUT':0,'CAM_INTERP_LINEAR':1,'CAM_INTERP_SMOOTH':2,'CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE':3,'CAM_INTERP_DEPENDS':4}"));
			json.put(".POGOProtos.Enums.CameraTarget",new JSONObject("{'CAM_TARGET_ATTACKER':0,'CAM_TARGET_ATTACKER_EDGE':1,'CAM_TARGET_ATTACKER_GROUND':2,'CAM_TARGET_DEFENDER':3,'CAM_TARGET_DEFENDER_EDGE':4,'CAM_TARGET_DEFENDER_GROUND':5,'CAM_TARGET_ATTACKER_DEFENDER':6,'CAM_TARGET_ATTACKER_DEFENDER_EDGE':7,'CAM_TARGET_DEFENDER_ATTACKER':8,'CAM_TARGET_DEFENDER_ATTACKER_EDGE':9,'CAM_TARGET_ATTACKER_DEFENDER_MIRROR':11,'CAM_TARGET_SHOULDER_ATTACKER_DEFENDER':12,'CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR':13,'CAM_TARGET_ATTACKER_DEFENDER_WORLD':14}"));
			json.put(".POGOProtos.Enums.Gender",new JSONObject("{'MALE':0,'FEMALE':1}"));
			json.put(".POGOProtos.Enums.HoloIapItemCategory",new JSONObject("{'IAP_CATEGORY_NONE':0,'IAP_CATEGORY_BUNDLE':1,'IAP_CATEGORY_ITEMS':2,'IAP_CATEGORY_UPGRADES':3,'IAP_CATEGORY_POKECOINS':4}"));
			json.put(".POGOProtos.Enums.ItemCategory",new JSONObject("{'ITEM_CATEGORY_NONE':0,'ITEM_CATEGORY_POKEBALL':1,'ITEM_CATEGORY_FOOD':2,'ITEM_CATEGORY_MEDICINE':3,'ITEM_CATEGORY_BOOST':4,'ITEM_CATEGORY_UTILITES':5,'ITEM_CATEGORY_CAMERA':6,'ITEM_CATEGORY_DISK':7,'ITEM_CATEGORY_INCUBATOR':8,'ITEM_CATEGORY_INCENSE':9,'ITEM_CATEGORY_XP_BOOST':10,'ITEM_CATEGORY_INVENTORY_UPGRADE':11}"));
			json.put(".POGOProtos.Enums.ItemEffect",new JSONObject("{'ITEM_EFFECT_NONE':0,'ITEM_EFFECT_CAP_NO_FLEE':1000,'ITEM_EFFECT_CAP_NO_MOVEMENT':1002,'ITEM_EFFECT_CAP_NO_THREAT':1003,'ITEM_EFFECT_CAP_TARGET_MAX':1004,'ITEM_EFFECT_CAP_TARGET_SLOW':1005,'ITEM_EFFECT_CAP_CHANCE_NIGHT':1006,'ITEM_EFFECT_CAP_CHANCE_TRAINER':1007,'ITEM_EFFECT_CAP_CHANCE_FIRST_THROW':1008,'ITEM_EFFECT_CAP_CHANCE_LEGEND':1009,'ITEM_EFFECT_CAP_CHANCE_HEAVY':1010,'ITEM_EFFECT_CAP_CHANCE_REPEAT':1011,'ITEM_EFFECT_CAP_CHANCE_MULTI_THROW':1012,'ITEM_EFFECT_CAP_CHANCE_ALWAYS':1013,'ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW':1014}"));
			json.put(".POGOProtos.Enums.Platform",new JSONObject("{'UNSET':0,'IOS':1,'ANDROID':2,'OSX':3,'WINDOWS':4}"));
			json.put(".POGOProtos.Enums.PokemonClass",new JSONObject("{'NORMAL':0,'LEGENDARY':1,'MYTHIC':2}"));
			json.put(".POGOProtos.Enums.PokemonFamilyId",new JSONObject("{'FAMILY_UNSET':0,'FAMILY_BULBASAUR':1,'FAMILY_CHARMANDER':4,'FAMILY_SQUIRTLE':7,'FAMILY_CATERPIE':10,'FAMILY_WEEDLE':13,'FAMILY_PIDGEY':16,'FAMILY_RATTATA':19,'FAMILY_SPEAROW':21,'FAMILY_EKANS':23,'FAMILY_PIKACHU':25,'FAMILY_SANDSHREW':27,'FAMILY_NIDORAN_FEMALE':29,'FAMILY_NIDORAN_MALE':32,'FAMILY_CLEFAIRY':35,'FAMILY_VULPIX':37,'FAMILY_JIGGLYPUFF':39,'FAMILY_ZUBAT':41,'FAMILY_ODDISH':43,'FAMILY_PARAS':46,'FAMILY_VENONAT':48,'FAMILY_DIGLETT':50,'FAMILY_MEOWTH':52,'FAMILY_PSYDUCK':54,'FAMILY_MANKEY':56,'FAMILY_GROWLITHE':58,'FAMILY_POLIWAG':60,'FAMILY_ABRA':63,'FAMILY_MACHOP':66,'FAMILY_BELLSPROUT':69,'FAMILY_TENTACOOL':72,'FAMILY_GEODUDE':74,'FAMILY_PONYTA':77,'FAMILY_SLOWPOKE':79,'FAMILY_MAGNEMITE':81,'FAMILY_FARFETCHD':83,'FAMILY_DODUO':84,'FAMILY_SEEL':86,'FAMILY_GRIMER':88,'FAMILY_SHELLDER':90,'FAMILY_GASTLY':92,'FAMILY_ONIX':95,'FAMILY_DROWZEE':96,'FAMILY_HYPNO':97,'FAMILY_KRABBY':98,'FAMILY_VOLTORB':100,'FAMILY_EXEGGCUTE':102,'FAMILY_CUBONE':104,'FAMILY_HITMONLEE':106,'FAMILY_HITMONCHAN':107,'FAMILY_LICKITUNG':108,'FAMILY_KOFFING':109,'FAMILY_RHYHORN':111,'FAMILY_CHANSEY':113,'FAMILY_TANGELA':114,'FAMILY_KANGASKHAN':115,'FAMILY_HORSEA':116,'FAMILY_GOLDEEN':118,'FAMILY_STARYU':120,'FAMILY_MR_MIME':122,'FAMILY_SCYTHER':123,'FAMILY_JYNX':124,'FAMILY_ELECTABUZZ':125,'FAMILY_MAGMAR':126,'FAMILY_PINSIR':127,'FAMILY_TAUROS':128,'FAMILY_MAGIKARP':129,'FAMILY_LAPRAS':131,'FAMILY_DITTO':132,'FAMILY_EEVEE':133,'FAMILY_PORYGON':137,'FAMILY_OMANYTE':138,'FAMILY_KABUTO':140,'FAMILY_AERODACTYL':142,'FAMILY_SNORLAX':143,'FAMILY_ARTICUNO':144,'FAMILY_ZAPDOS':145,'FAMILY_MOLTRES':146,'FAMILY_DRATINI':147,'FAMILY_MEWTWO':150,'FAMILY_MEW':151}"));
			json.put(".POGOProtos.Enums.PokemonId",new JSONObject("{'MISSINGNO':0,'BULBASAUR':1,'IVYSAUR':2,'VENUSAUR':3,'CHARMANDER':4,'CHARMELEON':5,'CHARIZARD':6,'SQUIRTLE':7,'WARTORTLE':8,'BLASTOISE':9,'CATERPIE':10,'METAPOD':11,'BUTTERFREE':12,'WEEDLE':13,'KAKUNA':14,'BEEDRILL':15,'PIDGEY':16,'PIDGEOTTO':17,'PIDGEOT':18,'RATTATA':19,'RATICATE':20,'SPEAROW':21,'FEAROW':22,'EKANS':23,'ARBOK':24,'PIKACHU':25,'RAICHU':26,'SANDSHREW':27,'SANDSLASH':28,'NIDORAN_FEMALE':29,'NIDORINA':30,'NIDOQUEEN':31,'NIDORAN_MALE':32,'NIDORINO':33,'NIDOKING':34,'CLEFAIRY':35,'CLEFABLE':36,'VULPIX':37,'NINETALES':38,'JIGGLYPUFF':39,'WIGGLYTUFF':40,'ZUBAT':41,'GOLBAT':42,'ODDISH':43,'GLOOM':44,'VILEPLUME':45,'PARAS':46,'PARASECT':47,'VENONAT':48,'VENOMOTH':49,'DIGLETT':50,'DUGTRIO':51,'MEOWTH':52,'PERSIAN':53,'PSYDUCK':54,'GOLDUCK':55,'MANKEY':56,'PRIMEAPE':57,'GROWLITHE':58,'ARCANINE':59,'POLIWAG':60,'POLIWHIRL':61,'POLIWRATH':62,'ABRA':63,'KADABRA':64,'ALAKAZAM':65,'MACHOP':66,'MACHOKE':67,'MACHAMP':68,'BELLSPROUT':69,'WEEPINBELL':70,'VICTREEBEL':71,'TENTACOOL':72,'TENTACRUEL':73,'GEODUDE':74,'GRAVELER':75,'GOLEM':76,'PONYTA':77,'RAPIDASH':78,'SLOWPOKE':79,'SLOWBRO':80,'MAGNEMITE':81,'MAGNETON':82,'FARFETCHD':83,'DODUO':84,'DODRIO':85,'SEEL':86,'DEWGONG':87,'GRIMER':88,'MUK':89,'SHELLDER':90,'CLOYSTER':91,'GASTLY':92,'HAUNTER':93,'GENGAR':94,'ONIX':95,'DROWZEE':96,'HYPNO':97,'KRABBY':98,'KINGLER':99,'VOLTORB':100,'ELECTRODE':101,'EXEGGCUTE':102,'EXEGGUTOR':103,'CUBONE':104,'MAROWAK':105,'HITMONLEE':106,'HITMONCHAN':107,'LICKITUNG':108,'KOFFING':109,'WEEZING':110,'RHYHORN':111,'RHYDON':112,'CHANSEY':113,'TANGELA':114,'KANGASKHAN':115,'HORSEA':116,'SEADRA':117,'GOLDEEN':118,'SEAKING':119,'STARYU':120,'STARMIE':121,'MR_MIME':122,'SCYTHER':123,'JYNX':124,'ELECTABUZZ':125,'MAGMAR':126,'PINSIR':127,'TAUROS':128,'MAGIKARP':129,'GYARADOS':130,'LAPRAS':131,'DITTO':132,'EEVEE':133,'VAPOREON':134,'JOLTEON':135,'FLAREON':136,'PORYGON':137,'OMANYTE':138,'OMASTAR':139,'KABUTO':140,'KABUTOPS':141,'AERODACTYL':142,'SNORLAX':143,'ARTICUNO':144,'ZAPDOS':145,'MOLTRES':146,'DRATINI':147,'DRAGONAIR':148,'DRAGONITE':149,'MEWTWO':150,'MEW':151}"));
			json.put(".POGOProtos.Enums.PokemonMove",new JSONObject("{'MOVE_UNSET':0,'THUNDER_SHOCK':1,'QUICK_ATTACK':2,'SCRATCH':3,'EMBER':4,'VINE_WHIP':5,'TACKLE':6,'RAZOR_LEAF':7,'TAKE_DOWN':8,'WATER_GUN':9,'BITE':10,'POUND':11,'DOUBLE_SLAP':12,'WRAP':13,'HYPER_BEAM':14,'LICK':15,'DARK_PULSE':16,'SMOG':17,'SLUDGE':18,'METAL_CLAW':19,'VICE_GRIP':20,'FLAME_WHEEL':21,'MEGAHORN':22,'WING_ATTACK':23,'FLAMETHROWER':24,'SUCKER_PUNCH':25,'DIG':26,'LOW_KICK':27,'CROSS_CHOP':28,'PSYCHO_CUT':29,'PSYBEAM':30,'EARTHQUAKE':31,'STONE_EDGE':32,'ICE_PUNCH':33,'HEART_STAMP':34,'DISCHARGE':35,'FLASH_CANNON':36,'PECK':37,'DRILL_PECK':38,'ICE_BEAM':39,'BLIZZARD':40,'AIR_SLASH':41,'HEAT_WAVE':42,'TWINEEDLE':43,'POISON_JAB':44,'AERIAL_ACE':45,'DRILL_RUN':46,'PETAL_BLIZZARD':47,'MEGA_DRAIN':48,'BUG_BUZZ':49,'POISON_FANG':50,'NIGHT_SLASH':51,'SLASH':52,'BUBBLE_BEAM':53,'SUBMISSION':54,'KARATE_CHOP':55,'LOW_SWEEP':56,'AQUA_JET':57,'AQUA_TAIL':58,'SEED_BOMB':59,'PSYSHOCK':60,'ROCK_THROW':61,'ANCIENT_POWER':62,'ROCK_TOMB':63,'ROCK_SLIDE':64,'POWER_GEM':65,'SHADOW_SNEAK':66,'SHADOW_PUNCH':67,'SHADOW_CLAW':68,'OMINOUS_WIND':69,'SHADOW_BALL':70,'BULLET_PUNCH':71,'MAGNET_BOMB':72,'STEEL_WING':73,'IRON_HEAD':74,'PARABOLIC_CHARGE':75,'SPARK':76,'THUNDER_PUNCH':77,'THUNDER':78,'THUNDERBOLT':79,'TWISTER':80,'DRAGON_BREATH':81,'DRAGON_PULSE':82,'DRAGON_CLAW':83,'DISARMING_VOICE':84,'DRAINING_KISS':85,'DAZZLING_GLEAM':86,'MOONBLAST':87,'PLAY_ROUGH':88,'CROSS_POISON':89,'SLUDGE_BOMB':90,'SLUDGE_WAVE':91,'GUNK_SHOT':92,'MUD_SHOT':93,'BONE_CLUB':94,'BULLDOZE':95,'MUD_BOMB':96,'FURY_CUTTER':97,'BUG_BITE':98,'SIGNAL_BEAM':99,'X_SCISSOR':100,'FLAME_CHARGE':101,'FLAME_BURST':102,'FIRE_BLAST':103,'BRINE':104,'WATER_PULSE':105,'SCALD':106,'HYDRO_PUMP':107,'PSYCHIC':108,'PSYSTRIKE':109,'ICE_SHARD':110,'ICY_WIND':111,'FROST_BREATH':112,'ABSORB':113,'GIGA_DRAIN':114,'FIRE_PUNCH':115,'SOLAR_BEAM':116,'LEAF_BLADE':117,'POWER_WHIP':118,'SPLASH':119,'ACID':120,'AIR_CUTTER':121,'HURRICANE':122,'BRICK_BREAK':123,'CUT':124,'SWIFT':125,'HORN_ATTACK':126,'STOMP':127,'HEADBUTT':128,'HYPER_FANG':129,'SLAM':130,'BODY_SLAM':131,'REST':132,'STRUGGLE':133,'SCALD_BLASTOISE':134,'HYDRO_PUMP_BLASTOISE':135,'WRAP_GREEN':136,'WRAP_PINK':137,'FURY_CUTTER_FAST':200,'BUG_BITE_FAST':201,'BITE_FAST':202,'SUCKER_PUNCH_FAST':203,'DRAGON_BREATH_FAST':204,'THUNDER_SHOCK_FAST':205,'SPARK_FAST':206,'LOW_KICK_FAST':207,'KARATE_CHOP_FAST':208,'EMBER_FAST':209,'WING_ATTACK_FAST':210,'PECK_FAST':211,'LICK_FAST':212,'SHADOW_CLAW_FAST':213,'VINE_WHIP_FAST':214,'RAZOR_LEAF_FAST':215,'MUD_SHOT_FAST':216,'ICE_SHARD_FAST':217,'FROST_BREATH_FAST':218,'QUICK_ATTACK_FAST':219,'SCRATCH_FAST':220,'TACKLE_FAST':221,'POUND_FAST':222,'CUT_FAST':223,'POISON_JAB_FAST':224,'ACID_FAST':225,'PSYCHO_CUT_FAST':226,'ROCK_THROW_FAST':227,'METAL_CLAW_FAST':228,'BULLET_PUNCH_FAST':229,'WATER_GUN_FAST':230,'SPLASH_FAST':231,'WATER_GUN_FAST_BLASTOISE':232,'MUD_SLAP_FAST':233,'ZEN_HEADBUTT_FAST':234,'CONFUSION_FAST':235,'POISON_STING_FAST':236,'BUBBLE_FAST':237,'FEINT_ATTACK_FAST':238,'STEEL_WING_FAST':239,'FIRE_FANG_FAST':240,'ROCK_SMASH_FAST':241}"));
			json.put(".POGOProtos.Enums.PokemonMovementType",new JSONObject("{'MOVEMENT_STATIC':0,'MOVEMENT_JUMP':1,'MOVEMENT_VERTICAL':2,'MOVEMENT_PSYCHIC':3,'MOVEMENT_ELECTRIC':4,'MOVEMENT_FLYING':5,'MOVEMENT_HOVERING':6}"));
			json.put(".POGOProtos.Enums.PokemonType",new JSONObject("{'POKEMON_TYPE_NONE':0,'POKEMON_TYPE_NORMAL':1,'POKEMON_TYPE_FIGHTING':2,'POKEMON_TYPE_FLYING':3,'POKEMON_TYPE_POISON':4,'POKEMON_TYPE_GROUND':5,'POKEMON_TYPE_ROCK':6,'POKEMON_TYPE_BUG':7,'POKEMON_TYPE_GHOST':8,'POKEMON_TYPE_STEEL':9,'POKEMON_TYPE_FIRE':10,'POKEMON_TYPE_WATER':11,'POKEMON_TYPE_GRASS':12,'POKEMON_TYPE_ELECTRIC':13,'POKEMON_TYPE_PSYCHIC':14,'POKEMON_TYPE_ICE':15,'POKEMON_TYPE_DRAGON':16,'POKEMON_TYPE_DARK':17,'POKEMON_TYPE_FAIRY':18}"));
			json.put(".POGOProtos.Enums.TeamColor",new JSONObject("{'NEUTRAL':0,'BLUE':1,'RED':2,'YELLOW':3}"));
			json.put(".POGOProtos.Enums.TutorialState",new JSONObject("{'LEGAL_SCREEN':0,'AVATAR_SELECTION':1,'ACCOUNT_CREATION':2,'POKEMON_CAPTURE':3,'NAME_SELECTION':4,'POKEMON_BERRY':5,'USE_ITEM':6,'FIRST_TIME_EXPERIENCE_COMPLETE':7,'POKESTOP_TUTORIAL':8,'GYM_TUTORIAL':9}"));
			json.put(".POGOProtos.Inventory.AppliedItem",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'item_type':{'id':2,'type':'.POGOProtos.Inventory.ItemType'},'expire_ms':{'id':3,'type':'int64'},'applied_ms':{'id':4,'type':'int64'}}"));
			json.put(".POGOProtos.Inventory.AppliedItems",new JSONObject("{'item':{'id':4,'type':'.POGOProtos.Inventory.AppliedItem','repeated':true}}"));
			json.put(".POGOProtos.Inventory.EggIncubator",new JSONObject("{'id':{'id':1,'type':'string'},'item_id':{'id':2,'type':'.POGOProtos.Inventory.ItemId'},'incubator_type':{'id':3,'type':'.POGOProtos.Inventory.EggIncubatorType'},'uses_remaining':{'id':4,'type':'int32'},'pokemon_id':{'id':5,'type':'uint64'},'start_km_walked':{'id':6,'type':'double'},'target_km_walked':{'id':7,'type':'double'}}"));
			json.put(".POGOProtos.Inventory.EggIncubators",new JSONObject("{'egg_incubator':{'id':1,'type':'.POGOProtos.Inventory.EggIncubator'}}"));
			json.put(".POGOProtos.Inventory.EggIncubatorType",new JSONObject("{'INCUBATOR_UNSET':0,'INCUBATOR_DISTANCE':1}"));
			json.put(".POGOProtos.Inventory.InventoryDelta",new JSONObject("{'original_timestamp_ms':{'id':1,'type':'int64'},'new_timestamp_ms':{'id':2,'type':'int64'},'inventory_items':{'id':3,'type':'.POGOProtos.Inventory.InventoryItem','repeated':true}}"));
			json.put(".POGOProtos.Inventory.InventoryItem",new JSONObject("{'modified_timestamp_ms':{'id':1,'type':'int64'},'deleted_item_key':{'id':2,'type':'int64'},'inventory_item_data':{'id':3,'type':'.POGOProtos.Inventory.InventoryItemData'}}"));
			json.put(".POGOProtos.Inventory.InventoryItemData",new JSONObject("{'pokemon_data':{'id':1,'type':'.POGOProtos.Data.PokemonData'},'item':{'id':2,'type':'.POGOProtos.Inventory.Item'},'pokedex_entry':{'id':3,'type':'.POGOProtos.Data.PokedexEntry'},'player_stats':{'id':4,'type':'.POGOProtos.Data.Player.PlayerStats'},'player_currency':{'id':5,'type':'.POGOProtos.Data.Player.PlayerCurrency'},'player_camera':{'id':6,'type':'.POGOProtos.Data.Player.PlayerCamera'},'inventory_upgrades':{'id':7,'type':'.POGOProtos.Inventory.InventoryUpgrades'},'applied_items':{'id':8,'type':'.POGOProtos.Inventory.AppliedItems'},'egg_incubators':{'id':9,'type':'.POGOProtos.Inventory.EggIncubators'},'pokemon_family':{'id':10,'type':'.POGOProtos.Inventory.PokemonFamily'}}"));
			json.put(".POGOProtos.Inventory.InventoryUpgrade",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'upgrade_type':{'id':2,'type':'.POGOProtos.Inventory.InventoryUpgradeType'},'additional_storage':{'id':3,'type':'int32'}}"));
			json.put(".POGOProtos.Inventory.InventoryUpgrades",new JSONObject("{'inventory_upgrades':{'id':1,'type':'.POGOProtos.Inventory.InventoryUpgrade','repeated':true}}"));
			json.put(".POGOProtos.Inventory.InventoryUpgradeType",new JSONObject("{'UPGRADE_UNSET':0,'INCREASE_ITEM_STORAGE':1,'INCREASE_POKEMON_STORAGE':2}"));
			json.put(".POGOProtos.Inventory.Item",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'count':{'id':2,'type':'int32'},'unseen':{'id':3,'type':'bool'}}"));
			json.put(".POGOProtos.Inventory.ItemAward",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'item_count':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Inventory.ItemId",new JSONObject("{'ITEM_UNKNOWN':0,'ITEM_POKE_BALL':1,'ITEM_GREAT_BALL':2,'ITEM_ULTRA_BALL':3,'ITEM_MASTER_BALL':4,'ITEM_POTION':101,'ITEM_SUPER_POTION':102,'ITEM_HYPER_POTION':103,'ITEM_MAX_POTION':104,'ITEM_REVIVE':201,'ITEM_MAX_REVIVE':202,'ITEM_LUCKY_EGG':301,'ITEM_INCENSE_ORDINARY':401,'ITEM_INCENSE_SPICY':402,'ITEM_INCENSE_COOL':403,'ITEM_INCENSE_FLORAL':404,'ITEM_TROY_DISK':501,'ITEM_X_ATTACK':602,'ITEM_X_DEFENSE':603,'ITEM_X_MIRACLE':604,'ITEM_RAZZ_BERRY':701,'ITEM_BLUK_BERRY':702,'ITEM_NANAB_BERRY':703,'ITEM_WEPAR_BERRY':704,'ITEM_PINAP_BERRY':705,'ITEM_SPECIAL_CAMERA':801,'ITEM_INCUBATOR_BASIC_UNLIMITED':901,'ITEM_INCUBATOR_BASIC':902,'ITEM_POKEMON_STORAGE_UPGRADE':1001,'ITEM_ITEM_STORAGE_UPGRADE':1002}"));
			json.put(".POGOProtos.Inventory.ItemType",new JSONObject("{'ITEM_TYPE_NONE':0,'ITEM_TYPE_POKEBALL':1,'ITEM_TYPE_POTION':2,'ITEM_TYPE_REVIVE':3,'ITEM_TYPE_MAP':4,'ITEM_TYPE_BATTLE':5,'ITEM_TYPE_FOOD':6,'ITEM_TYPE_CAMERA':7,'ITEM_TYPE_DISK':8,'ITEM_TYPE_INCUBATOR':9,'ITEM_TYPE_INCENSE':10,'ITEM_TYPE_XP_BOOST':11,'ITEM_TYPE_INVENTORY_UPGRADE':12}"));
			json.put(".POGOProtos.Inventory.PokemonFamily",new JSONObject("{'family_id':{'id':1,'type':'.POGOProtos.Enums.PokemonFamilyId'},'candy':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Map.Fort.FortData",new JSONObject("{'id':{'id':1,'type':'string'},'last_modified_timestamp_ms':{'id':2,'type':'int64'},'latitude':{'id':3,'type':'double'},'longitude':{'id':4,'type':'double'},'enabled':{'id':8,'type':'bool'},'type':{'id':9,'type':'.POGOProtos.Map.Fort.FortType'},'owned_by_team':{'id':5,'type':'.POGOProtos.Enums.TeamColor'},'guard_pokemon_id':{'id':6,'type':'.POGOProtos.Enums.PokemonId'},'guard_pokemon_cp':{'id':7,'type':'int32'},'gym_points':{'id':10,'type':'int64'},'is_in_battle':{'id':11,'type':'bool'},'cooldown_complete_timestamp_ms':{'id':14,'type':'int64'},'sponsor':{'id':15,'type':'.POGOProtos.Map.Fort.FortSponsor'},'rendering_type':{'id':16,'type':'.POGOProtos.Map.Fort.FortRenderingType'},'active_fort_modifier':{'id':12,'type':'bytes'},'lure_info':{'id':13,'type':'.POGOProtos.Map.Fort.FortLureInfo'}}"));
			json.put(".POGOProtos.Map.Fort.FortLureInfo",new JSONObject("{'fort_id':{'id':1,'type':'string'},'unknown2':{'id':2,'type':'double'},'active_pokemon_id':{'id':3,'type':'.POGOProtos.Enums.PokemonId'},'lure_expires_timestamp_ms':{'id':4,'type':'int64'}}"));
			json.put(".POGOProtos.Map.Fort.FortModifier",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'expiration_timestamp_ms':{'id':2,'type':'int64'},'deployer_player_codename':{'id':3,'type':'string'}}"));
			json.put(".POGOProtos.Map.Fort.FortRenderingType",new JSONObject("{'DEFAULT':0,'INTERNAL_TEST':1}"));
			json.put(".POGOProtos.Map.Fort.FortSponsor",new JSONObject("{'UNSET_SPONSOR':0,'MCDONALDS':1,'POKEMON_STORE':2}"));
			json.put(".POGOProtos.Map.Fort.FortSummary",new JSONObject("{'fort_summary_id':{'id':1,'type':'int32'},'last_modified_timestamp_ms':{'id':2,'type':'int32'},'latitude':{'id':3,'type':'int32'},'longitude':{'id':4,'type':'int32'}}"));
			json.put(".POGOProtos.Map.Fort.FortType",new JSONObject("{'GYM':0,'CHECKPOINT':1}"));
			json.put(".POGOProtos.Map.MapCell",new JSONObject("{'s2_cell_id':{'id':1,'type':'uint64'},'current_timestamp_ms':{'id':2,'type':'int64'},'forts':{'id':3,'type':'.POGOProtos.Map.Fort.FortData','repeated':true},'spawn_points':{'id':4,'type':'.POGOProtos.Map.SpawnPoint','repeated':true},'deleted_objects':{'id':6,'type':'string','repeated':true},'is_truncated_list':{'id':7,'type':'bool'},'fort_summaries':{'id':8,'type':'.POGOProtos.Map.Fort.FortSummary','repeated':true},'decimated_spawn_points':{'id':9,'type':'.POGOProtos.Map.SpawnPoint','repeated':true},'wild_pokemons':{'id':5,'type':'.POGOProtos.Map.Pokemon.WildPokemon','repeated':true},'catchable_pokemons':{'id':10,'type':'.POGOProtos.Map.Pokemon.MapPokemon','repeated':true},'nearby_pokemons':{'id':11,'type':'.POGOProtos.Map.Pokemon.NearbyPokemon','repeated':true}}"));
			json.put(".POGOProtos.Map.MapObjectsStatus",new JSONObject("{'UNSET_STATUS':0,'SUCCESS':1,'LOCATION_UNSET':2}"));
			json.put(".POGOProtos.Map.Pokemon.MapPokemon",new JSONObject("{'spawn_point_id':{'id':1,'type':'string'},'encounter_id':{'id':2,'type':'fixed64'},'pokemon_id':{'id':3,'type':'.POGOProtos.Enums.PokemonId'},'expiration_timestamp_ms':{'id':4,'type':'int64'},'latitude':{'id':5,'type':'double'},'longitude':{'id':6,'type':'double'}}"));
			json.put(".POGOProtos.Map.Pokemon.NearbyPokemon",new JSONObject("{'pokemon_id':{'id':1,'type':'.POGOProtos.Enums.PokemonId'},'distance_in_meters':{'id':2,'type':'float'},'encounter_id':{'id':3,'type':'fixed64'}}"));
			json.put(".POGOProtos.Map.Pokemon.WildPokemon",new JSONObject("{'encounter_id':{'id':1,'type':'fixed64'},'last_modified_timestamp_ms':{'id':2,'type':'int64'},'latitude':{'id':3,'type':'double'},'longitude':{'id':4,'type':'double'},'spawn_point_id':{'id':5,'type':'string'},'pokemon_data':{'id':7,'type':'.POGOProtos.Data.PokemonData'},'time_till_hidden_ms':{'id':11,'type':'int32'}}"));
			json.put(".POGOProtos.Map.SpawnPoint",new JSONObject("{'latitude':{'id':2,'type':'double'},'longitude':{'id':3,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Envelopes.AuthTicket",new JSONObject("{'start':{'id':1,'type':'bytes'},'expire_timestamp_ms':{'id':2,'type':'uint64'},'end':{'id':3,'type':'bytes'}}"));
			json.put(".POGOProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.JWT",new JSONObject("{'contents':{'id':1,'type':'string'},'unknown2':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Envelopes.RequestEnvelope.AuthInfo",new JSONObject("{'provider':{'id':1,'type':'string'},'token':{'id':2,'type':'.POGOProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.JWT'}}"));
			json.put(".POGOProtos.Networking.Envelopes.RequestEnvelope",new JSONObject("{'status_code':{'id':1,'type':'int32'},'request_id':{'id':3,'type':'uint64'},'requests':{'id':4,'type':'.POGOProtos.Networking.Requests.Request','repeated':true},'unknown6':{'id':6,'type':'.POGOProtos.Networking.Envelopes.Unknown6'},'latitude':{'id':7,'type':'double'},'longitude':{'id':8,'type':'double'},'altitude':{'id':9,'type':'double'},'auth_info':{'id':10,'type':'.POGOProtos.Networking.Envelopes.RequestEnvelope.AuthInfo'},'auth_ticket':{'id':11,'type':'.POGOProtos.Networking.Envelopes.AuthTicket'},'unknown12':{'id':12,'type':'int64'}}"));
			json.put(".POGOProtos.Networking.Envelopes.ResponseEnvelope.Unknown7",new JSONObject("{'unknown71':{'id':1,'type':'bytes'},'unknown72':{'id':2,'type':'int64'},'unknown73':{'id':3,'type':'bytes'}}"));
			json.put(".POGOProtos.Networking.Envelopes.ResponseEnvelope",new JSONObject("{'status_code':{'id':1,'type':'int32'},'request_id':{'id':2,'type':'uint64'},'api_url':{'id':3,'type':'string'},'unknown6':{'id':6,'type':'.POGOProtos.Networking.Envelopes.Unknown6Response'},'auth_ticket':{'id':7,'type':'.POGOProtos.Networking.Envelopes.AuthTicket'},'returns':{'id':100,'type':'bytes','repeated':true},'error':{'id':101,'type':'string'}}"));
			json.put(".POGOProtos.Networking.Envelopes.Unknown6.Unknown2",new JSONObject("{'unknown1':{'id':1,'type':'bytes'}}"));
			json.put(".POGOProtos.Networking.Envelopes.Unknown6",new JSONObject("{'unknown1':{'id':1,'type':'int32'},'unknown2':{'id':2,'type':'.POGOProtos.Networking.Envelopes.Unknown6.Unknown2'}}"));
			json.put(".POGOProtos.Networking.Envelopes.Unknown6Response.Unknown2",new JSONObject("{'unknown1':{'id':1,'type':'uint64'}}"));
			json.put(".POGOProtos.Networking.Envelopes.Unknown6Response",new JSONObject("{'unknown1':{'id':1,'type':'int32'},'unknown2':{'id':2,'type':'.POGOProtos.Networking.Envelopes.Unknown6Response.Unknown2'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.AddFortModifierMessage",new JSONObject("{'modifier_type':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'fort_id':{'id':2,'type':'string'},'player_latitude':{'id':3,'type':'double'},'player_longitude':{'id':4,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.AttackGymMessage",new JSONObject("{'gym_id':{'id':1,'type':'string'},'battle_id':{'id':2,'type':'string'},'attack_actions':{'id':3,'type':'.POGOProtos.Data.Battle.BattleAction','repeated':true},'last_retrieved_actions':{'id':4,'type':'.POGOProtos.Data.Battle.BattleAction'},'player_latitude':{'id':5,'type':'double'},'player_longitude':{'id':6,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.CatchPokemonMessage",new JSONObject("{'encounter_id':{'id':1,'type':'fixed64'},'pokeball':{'id':2,'type':'int32'},'normalized_reticle_size':{'id':3,'type':'double'},'spawn_point_guid':{'id':4,'type':'string'},'hit_pokemon':{'id':5,'type':'bool'},'spin_modifier':{'id':6,'type':'double'},'normalized_hit_position':{'id':7,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.CheckAwardedBadgesMessage",new JSONObject("{}"));
			json.put(".POGOProtos.Networking.Requests.Messages.CheckCodenameAvailableMessage",new JSONObject("{'codename':{'id':1,'type':'string'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.ClaimCodenameMessage",new JSONObject("{'codename':{'id':1,'type':'string'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.CollectDailyBonusMessage",new JSONObject("{}"));
			json.put(".POGOProtos.Networking.Requests.Messages.CollectDailyDefenderBonusMessage",new JSONObject("{}"));
			json.put(".POGOProtos.Networking.Requests.Messages.DiskEncounterMessage",new JSONObject("{'encounter_id':{'id':1,'type':'fixed64'},'fort_id':{'id':2,'type':'string'},'player_latitude':{'id':3,'type':'double'},'player_longitude':{'id':4,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.DownloadItemTemplatesMessage",new JSONObject("{}"));
			json.put(".POGOProtos.Networking.Requests.Messages.DownloadRemoteConfigVersionMessage",new JSONObject("{'platform':{'id':1,'type':'.POGOProtos.Enums.Platform'},'device_manufacturer':{'id':2,'type':'string'},'device_model':{'id':3,'type':'string'},'locale':{'id':4,'type':'string'},'app_version':{'id':5,'type':'uint32'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.DownloadSettingsMessage",new JSONObject("{'hash':{'id':1,'type':'string'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.EchoMessage",new JSONObject("{}"));
			json.put(".POGOProtos.Networking.Requests.Messages.EncounterMessage",new JSONObject("{'encounter_id':{'id':1,'type':'fixed64'},'spawn_point_id':{'id':2,'type':'string'},'player_latitude':{'id':3,'type':'double'},'player_longitude':{'id':4,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.EncounterTutorialCompleteMessage",new JSONObject("{'pokemon_id':{'id':1,'type':'.POGOProtos.Enums.PokemonId'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.EquipBadgeMessage",new JSONObject("{'badge_type':{'id':1,'type':'.POGOProtos.Enums.BadgeType'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.EvolvePokemonMessage",new JSONObject("{'pokemon_id':{'id':1,'type':'fixed64'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.FortDeployPokemonMessage",new JSONObject("{'fort_id':{'id':1,'type':'string'},'pokemon_id':{'id':2,'type':'uint64'},'player_latitude':{'id':3,'type':'double'},'player_longitude':{'id':4,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.FortDetailsMessage",new JSONObject("{'fort_id':{'id':1,'type':'string'},'latitude':{'id':2,'type':'double'},'longitude':{'id':3,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.FortRecallPokemonMessage",new JSONObject("{'fort_id':{'id':1,'type':'string'},'pokemon_id':{'id':2,'type':'uint64'},'player_latitude':{'id':3,'type':'double'},'player_longitude':{'id':4,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.FortSearchMessage",new JSONObject("{'fort_id':{'id':1,'type':'string'},'player_latitude':{'id':2,'type':'double'},'player_longitude':{'id':3,'type':'double'},'fort_latitude':{'id':4,'type':'double'},'fort_longitude':{'id':5,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage",new JSONObject("{'platform':{'id':1,'type':'.POGOProtos.Enums.Platform'},'device_manufacturer':{'id':2,'type':'string'},'device_model':{'id':3,'type':'string'},'locale':{'id':4,'type':'string'},'app_version':{'id':5,'type':'uint32'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.GetDownloadUrlsMessage",new JSONObject("{'asset_id':{'id':1,'type':'string','repeated':true}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.GetGymDetailsMessage",new JSONObject("{'gym_id':{'id':1,'type':'string'},'player_latitude':{'id':2,'type':'double'},'player_longitude':{'id':3,'type':'double'},'gym_latitude':{'id':4,'type':'double'},'gym_longitude':{'id':5,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.GetHatchedEggsMessage",new JSONObject("{}"));
			json.put(".POGOProtos.Networking.Requests.Messages.GetIncensePokemonMessage",new JSONObject("{'player_latitude':{'id':1,'type':'double'},'player_longitude':{'id':2,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.GetInventoryMessage",new JSONObject("{'last_timestamp_ms':{'id':1,'type':'int64'},'item_been_seen':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.GetMapObjectsMessage",new JSONObject("{'cell_id':{'id':1,'type':'uint64','packed':true,'repeated':true},'since_timestamp_ms':{'id':2,'type':'int64','packed':true,'repeated':true},'latitude':{'id':3,'type':'double'},'longitude':{'id':4,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.GetPlayerMessage",new JSONObject("{}"));
			json.put(".POGOProtos.Networking.Requests.Messages.GetPlayerProfileMessage",new JSONObject("{'player_name':{'id':1,'type':'string'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.GetSuggestedCodenamesMessage",new JSONObject("{}"));
			json.put(".POGOProtos.Networking.Requests.Messages.IncenseEncounterMessage",new JSONObject("{'encounter_id':{'id':1,'type':'int64'},'encounter_location':{'id':2,'type':'string'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.LevelUpRewardsMessage",new JSONObject("{'level':{'id':1,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage",new JSONObject("{'tutorials_completed':{'id':1,'type':'.POGOProtos.Enums.TutorialState','repeated':true},'send_marketing_emails':{'id':2,'type':'bool'},'send_push_notifications':{'id':3,'type':'bool'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage",new JSONObject("{'pokemon_id':{'id':1,'type':'uint64'},'nickname':{'id':2,'type':'string'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.PlayerUpdateMessage",new JSONObject("{'latitude':{'id':1,'type':'double'},'longitude':{'id':2,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'count':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.ReleasePokemonMessage",new JSONObject("{'pokemon_id':{'id':1,'type':'fixed64'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.SetAvatarMessage",new JSONObject("{'player_avatar':{'id':2,'type':'.POGOProtos.Data.Player.PlayerAvatar'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.SetContactSettingsMessage",new JSONObject("{'contact_settings':{'id':1,'type':'.POGOProtos.Data.Player.ContactSettings'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.SetFavoritePokemonMessage",new JSONObject("{'pokemon_id':{'id':1,'type':'uint64'},'is_favorite':{'id':2,'type':'bool'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.SetPlayerTeamMessage",new JSONObject("{'team':{'id':1,'type':'.POGOProtos.Enums.TeamColor'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.StartGymBattleMessage",new JSONObject("{'gym_id':{'id':1,'type':'string'},'attacking_pokemon_ids':{'id':2,'type':'fixed64','repeated':true},'defending_pokemon_id':{'id':3,'type':'uint64'},'player_latitude':{'id':4,'type':'double'},'player_longitude':{'id':5,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.UpgradePokemonMessage",new JSONObject("{'pokemon_id':{'id':1,'type':'uint64'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.UseIncenseMessage",new JSONObject("{'incense_type':{'id':1,'type':'.POGOProtos.Inventory.ItemId'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.UseItemCaptureMessage",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'encounter_id':{'id':2,'type':'fixed64'},'spawn_point_guid':{'id':3,'type':'string'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.UseItemEggIncubatorMessage",new JSONObject("{'item_id':{'id':1,'type':'string'},'pokemon_id':{'id':2,'type':'uint64'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.UseItemGymMessage",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'gym_id':{'id':2,'type':'string'},'player_latitude':{'id':3,'type':'double'},'player_longitude':{'id':4,'type':'double'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.UseItemPotionMessage",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'pokemon_id':{'id':2,'type':'uint64'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.UseItemReviveMessage",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'pokemon_id':{'id':2,'type':'uint64'}}"));
			json.put(".POGOProtos.Networking.Requests.Messages.UseItemXpBoostMessage",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'}}"));
			json.put(".POGOProtos.Networking.Requests.Request",new JSONObject("{'request_type':{'id':1,'type':'.POGOProtos.Networking.Requests.RequestType'},'request_message':{'id':2,'type':'bytes'}}"));
			json.put(".POGOProtos.Networking.Requests.RequestType",new JSONObject("{'METHOD_UNSET':0,'PLAYER_UPDATE':1,'GET_PLAYER':2,'GET_INVENTORY':4,'DOWNLOAD_SETTINGS':5,'DOWNLOAD_ITEM_TEMPLATES':6,'DOWNLOAD_REMOTE_CONFIG_VERSION':7,'FORT_SEARCH':101,'ENCOUNTER':102,'CATCH_POKEMON':103,'FORT_DETAILS':104,'ITEM_USE':105,'GET_MAP_OBJECTS':106,'FORT_DEPLOY_POKEMON':110,'FORT_RECALL_POKEMON':111,'RELEASE_POKEMON':112,'USE_ITEM_POTION':113,'USE_ITEM_CAPTURE':114,'USE_ITEM_FLEE':115,'USE_ITEM_REVIVE':116,'TRADE_SEARCH':117,'TRADE_OFFER':118,'TRADE_RESPONSE':119,'TRADE_RESULT':120,'GET_PLAYER_PROFILE':121,'GET_ITEM_PACK':122,'BUY_ITEM_PACK':123,'BUY_GEM_PACK':124,'EVOLVE_POKEMON':125,'GET_HATCHED_EGGS':126,'ENCOUNTER_TUTORIAL_COMPLETE':127,'LEVEL_UP_REWARDS':128,'CHECK_AWARDED_BADGES':129,'USE_ITEM_GYM':133,'GET_GYM_DETAILS':134,'START_GYM_BATTLE':135,'ATTACK_GYM':136,'RECYCLE_INVENTORY_ITEM':137,'COLLECT_DAILY_BONUS':138,'USE_ITEM_XP_BOOST':139,'USE_ITEM_EGG_INCUBATOR':140,'USE_INCENSE':141,'GET_INCENSE_POKEMON':142,'INCENSE_ENCOUNTER':143,'ADD_FORT_MODIFIER':144,'DISK_ENCOUNTER':145,'COLLECT_DAILY_DEFENDER_BONUS':146,'UPGRADE_POKEMON':147,'SET_FAVORITE_POKEMON':148,'NICKNAME_POKEMON':149,'EQUIP_BADGE':150,'SET_CONTACT_SETTINGS':151,'GET_ASSET_DIGEST':300,'GET_DOWNLOAD_URLS':301,'GET_SUGGESTED_CODENAMES':401,'CHECK_CODENAME_AVAILABLE':402,'CLAIM_CODENAME':403,'SET_AVATAR':404,'SET_PLAYER_TEAM':405,'MARK_TUTORIAL_COMPLETE':406,'LOAD_SPAWN_POINTS':500,'ECHO':666,'DEBUG_UPDATE_INVENTORY':700,'DEBUG_DELETE_PLAYER':701,'SFIDA_REGISTRATION':800,'SFIDA_ACTION_LOG':801,'SFIDA_CERTIFICATION':802,'SFIDA_UPDATE':803,'SFIDA_ACTION':804,'SFIDA_DOWSER':805,'SFIDA_CAPTURE':806}"));
			json.put(".POGOProtos.Networking.Responses.AddFortModifierResponse",new JSONObject("{}"));
			json.put(".POGOProtos.Networking.Responses.AttackGymResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_INVALID_ATTACK_ACTIONS':2,'ERROR_NOT_IN_RANGE':3}"));
			json.put(".POGOProtos.Networking.Responses.AttackGymResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.AttackGymResponse.Result'},'battle_log':{'id':2,'type':'.POGOProtos.Data.Battle.BattleLog'},'battle_id':{'id':3,'type':'string'},'active_defender':{'id':4,'type':'.POGOProtos.Data.Battle.BattlePokemonInfo'},'active_attacker':{'id':5,'type':'.POGOProtos.Data.Battle.BattlePokemonInfo'}}"));
			json.put(".POGOProtos.Networking.Responses.CatchPokemonResponse.CatchStatus",new JSONObject("{'CATCH_ERROR':0,'CATCH_SUCCESS':1,'CATCH_ESCAPE':2,'CATCH_FLEE':3,'CATCH_MISSED':4}"));
			json.put(".POGOProtos.Networking.Responses.CatchPokemonResponse",new JSONObject("{'status':{'id':1,'type':'.POGOProtos.Networking.Responses.CatchPokemonResponse.CatchStatus'},'miss_percent':{'id':2,'type':'double'},'captured_pokemon_id':{'id':3,'type':'uint64'},'capture_award':{'id':4,'type':'.POGOProtos.Data.Capture.CaptureAward'}}"));
			json.put(".POGOProtos.Networking.Responses.CheckAwardedBadgesResponse",new JSONObject("{'success':{'id':1,'type':'bool'},'awarded_badges':{'id':2,'type':'.POGOProtos.Enums.BadgeType','repeated':true},'awarded_badge_levels':{'id':3,'type':'int32','repeated':true}}"));
			json.put(".POGOProtos.Networking.Responses.CheckCodenameAvailableResponse.Status",new JSONObject("{'UNSET':0,'SUCCESS':1,'CODENAME_NOT_AVAILABLE':2,'CODENAME_NOT_VALID':3,'CURRENT_OWNER':4,'CODENAME_CHANGE_NOT_ALLOWED':5}"));
			json.put(".POGOProtos.Networking.Responses.CheckCodenameAvailableResponse",new JSONObject("{'codename':{'id':1,'type':'string'},'user_message':{'id':2,'type':'string'},'is_assignable':{'id':3,'type':'bool'},'status':{'id':4,'type':'.POGOProtos.Networking.Responses.CheckCodenameAvailableResponse.Status'}}"));
			json.put(".POGOProtos.Networking.Responses.ClaimCodenameResponse.Status",new JSONObject("{'UNSET':0,'SUCCESS':1,'CODENAME_NOT_AVAILABLE':2,'CODENAME_NOT_VALID':3,'CURRENT_OWNER':4,'CODENAME_CHANGE_NOT_ALLOWED':5}"));
			json.put(".POGOProtos.Networking.Responses.ClaimCodenameResponse",new JSONObject("{'codename':{'id':1,'type':'string'},'user_message':{'id':2,'type':'string'},'is_assignable':{'id':3,'type':'bool'},'status':{'id':4,'type':'.POGOProtos.Networking.Responses.ClaimCodenameResponse.Status'}}"));
			json.put(".POGOProtos.Networking.Responses.CollectDailyBonusResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'FAILURE':2,'TOO_SOON':3}"));
			json.put(".POGOProtos.Networking.Responses.CollectDailyBonusResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.CollectDailyBonusResponse.Result'}}"));
			json.put(".POGOProtos.Networking.Responses.CollectDailyDefenderBonusResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'FAILURE':2,'TOO_SOON':3,'NO_DEFENDERS':4}"));
			json.put(".POGOProtos.Networking.Responses.CollectDailyDefenderBonusResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.CollectDailyDefenderBonusResponse.Result'},'currency_type':{'id':2,'type':'string','repeated':true},'currency_awarded':{'id':3,'type':'int32','repeated':true},'defenders_count':{'id':4,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Responses.DiskEncounterResponse.Result",new JSONObject("{'UNKNOWN':0,'SUCCESS':1,'NOT_AVAILABLE':2,'NOT_IN_RANGE':3,'ENCOUNTER_ALREADY_FINISHED':4,'POKEMON_INVENTORY_FULL':5}"));
			json.put(".POGOProtos.Networking.Responses.DiskEncounterResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.DiskEncounterResponse.Result'},'pokemon_data':{'id':2,'type':'.POGOProtos.Data.PokemonData'},'capture_probability':{'id':3,'type':'.POGOProtos.Data.Capture.CaptureProbability'}}"));
			json.put(".POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.ItemTemplate",new JSONObject("{'template_id':{'id':1,'type':'string'},'pokemon_settings':{'id':2,'type':'.POGOProtos.Settings.Master.PokemonSettings'},'item_settings':{'id':3,'type':'.POGOProtos.Settings.Master.ItemSettings'},'move_settings':{'id':4,'type':'.POGOProtos.Settings.Master.MoveSettings'},'move_sequence_settings':{'id':5,'type':'.POGOProtos.Settings.Master.MoveSequenceSettings'},'type_effective':{'id':8,'type':'.POGOProtos.Settings.Master.TypeEffectiveSettings'},'badge_settings':{'id':10,'type':'.POGOProtos.Settings.Master.BadgeSettings'},'camera':{'id':11,'type':'.POGOProtos.Settings.Master.CameraSettings'},'player_level':{'id':12,'type':'.POGOProtos.Settings.Master.PlayerLevelSettings'},'gym_level':{'id':13,'type':'.POGOProtos.Settings.Master.GymLevelSettings'},'battle_settings':{'id':14,'type':'.POGOProtos.Settings.Master.GymBattleSettings'},'encounter_settings':{'id':15,'type':'.POGOProtos.Settings.Master.EncounterSettings'},'iap_item_display':{'id':16,'type':'.POGOProtos.Settings.Master.IapItemDisplay'},'iap_settings':{'id':17,'type':'.POGOProtos.Settings.Master.IapSettings'},'pokemon_upgrades':{'id':18,'type':'.POGOProtos.Settings.Master.PokemonUpgradeSettings'},'equipped_badges':{'id':19,'type':'.POGOProtos.Settings.Master.EquippedBadgeSettings'}}"));
			json.put(".POGOProtos.Networking.Responses.DownloadItemTemplatesResponse",new JSONObject("{'success':{'id':1,'type':'bool'},'item_templates':{'id':2,'type':'.POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.ItemTemplate','repeated':true},'timestamp_ms':{'id':3,'type':'uint64'}}"));
			json.put(".POGOProtos.Networking.Responses.DownloadRemoteConfigVersionResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1}"));
			json.put(".POGOProtos.Networking.Responses.DownloadRemoteConfigVersionResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.DownloadRemoteConfigVersionResponse.Result'},'item_templates_timestamp_ms':{'id':2,'type':'uint64'},'asset_digest_timestamp_ms':{'id':3,'type':'uint64'}}"));
			json.put(".POGOProtos.Networking.Responses.DownloadSettingsResponse",new JSONObject("{'error':{'id':1,'type':'string'},'hash':{'id':2,'type':'string'},'settings':{'id':3,'type':'.POGOProtos.Settings.GlobalSettings'}}"));
			json.put(".POGOProtos.Networking.Responses.EchoResponse",new JSONObject("{'context':{'id':1,'type':'string'}}"));
			json.put(".POGOProtos.Networking.Responses.EncounterResponse.Background",new JSONObject("{'PARK':0,'DESERT':1}"));
			json.put(".POGOProtos.Networking.Responses.EncounterResponse.Status",new JSONObject("{'ENCOUNTER_ERROR':0,'ENCOUNTER_SUCCESS':1,'ENCOUNTER_NOT_FOUND':2,'ENCOUNTER_CLOSED':3,'ENCOUNTER_POKEMON_FLED':4,'ENCOUNTER_NOT_IN_RANGE':5,'ENCOUNTER_ALREADY_HAPPENED':6,'POKEMON_INVENTORY_FULL':7}"));
			json.put(".POGOProtos.Networking.Responses.EncounterResponse",new JSONObject("{'wild_pokemon':{'id':1,'type':'.POGOProtos.Map.Pokemon.WildPokemon'},'background':{'id':2,'type':'.POGOProtos.Networking.Responses.EncounterResponse.Background'},'status':{'id':3,'type':'.POGOProtos.Networking.Responses.EncounterResponse.Status'},'capture_probability':{'id':4,'type':'.POGOProtos.Data.Capture.CaptureProbability'}}"));
			json.put(".POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_INVALID_POKEMON':2}"));
			json.put(".POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Result'},'pokemon_data':{'id':2,'type':'.POGOProtos.Data.PokemonData'},'capture_award':{'id':3,'type':'.POGOProtos.Data.Capture.CaptureAward'}}"));
			json.put(".POGOProtos.Networking.Responses.EquipBadgeResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'COOLDOWN_ACTIVE':2,'NOT_QUALIFIED':3}"));
			json.put(".POGOProtos.Networking.Responses.EquipBadgeResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.EquipBadgeResponse.Result'},'equipped':{'id':2,'type':'.POGOProtos.Data.Player.EquippedBadge'}}"));
			json.put(".POGOProtos.Networking.Responses.EvolvePokemonResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'FAILED_POKEMON_MISSING':2,'FAILED_INSUFFICIENT_RESOURCES':3,'FAILED_POKEMON_CANNOT_EVOLVE':4,'FAILED_POKEMON_IS_DEPLOYED':5}"));
			json.put(".POGOProtos.Networking.Responses.EvolvePokemonResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.EvolvePokemonResponse.Result'},'evolved_pokemon_data':{'id':2,'type':'.POGOProtos.Data.PokemonData'},'experience_awarded':{'id':3,'type':'int32'},'candy_awarded':{'id':4,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Responses.FortDeployPokemonResponse.Result",new JSONObject("{'NO_RESULT_SET':0,'SUCCESS':1,'ERROR_ALREADY_HAS_POKEMON_ON_FORT':2,'ERROR_OPPOSING_TEAM_OWNS_FORT':3,'ERROR_FORT_IS_FULL':4,'ERROR_NOT_IN_RANGE':5,'ERROR_PLAYER_HAS_NO_TEAM':6,'ERROR_POKEMON_NOT_FULL_HP':7,'ERROR_PLAYER_BELOW_MINIMUM_LEVEL':8}"));
			json.put(".POGOProtos.Networking.Responses.FortDeployPokemonResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.FortDeployPokemonResponse.Result'},'fort_details':{'id':2,'type':'.POGOProtos.Networking.Responses.FortDetailsResponse'},'pokemon_data':{'id':3,'type':'.POGOProtos.Data.PokemonData'},'gym_state':{'id':4,'type':'.POGOProtos.Data.Gym.GymState'}}"));
			json.put(".POGOProtos.Networking.Responses.FortDetailsResponse",new JSONObject("{'fort_id':{'id':1,'type':'string'},'team_color':{'id':2,'type':'.POGOProtos.Enums.TeamColor'},'pokemon_data':{'id':3,'type':'.POGOProtos.Data.PokemonData'},'name':{'id':4,'type':'string'},'image_urls':{'id':5,'type':'string','repeated':true},'fp':{'id':6,'type':'int32'},'stamina':{'id':7,'type':'int32'},'max_stamina':{'id':8,'type':'int32'},'type':{'id':9,'type':'.POGOProtos.Map.Fort.FortType'},'latitude':{'id':10,'type':'double'},'longitude':{'id':11,'type':'double'},'description':{'id':12,'type':'string'},'modifiers':{'id':13,'type':'.POGOProtos.Map.Fort.FortModifier','repeated':true}}"));
			json.put(".POGOProtos.Networking.Responses.FortRecallPokemonResponse.Result",new JSONObject("{'NO_RESULT_SET':0,'SUCCESS':1,'ERROR_NOT_IN_RANGE':2,'ERROR_POKEMON_NOT_ON_FORT':3,'ERROR_NO_PLAYER':4}"));
			json.put(".POGOProtos.Networking.Responses.FortRecallPokemonResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.FortRecallPokemonResponse.Result'},'fort_details':{'id':2,'type':'.POGOProtos.Networking.Responses.FortDetailsResponse'}}"));
			json.put(".POGOProtos.Networking.Responses.FortSearchResponse.Result",new JSONObject("{'NO_RESULT_SET':0,'SUCCESS':1,'OUT_OF_RANGE':2,'IN_COOLDOWN_PERIOD':3,'INVENTORY_FULL':4}"));
			json.put(".POGOProtos.Networking.Responses.FortSearchResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.FortSearchResponse.Result'},'items_awarded':{'id':2,'type':'.POGOProtos.Inventory.ItemAward','repeated':true},'gems_awarded':{'id':3,'type':'int32'},'pokemon_data_egg':{'id':4,'type':'.POGOProtos.Data.PokemonData'},'experience_awarded':{'id':5,'type':'int32'},'cooldown_complete_timestamp_ms':{'id':6,'type':'int64'},'chain_hack_sequence_number':{'id':7,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Responses.GetAssetDigestResponse",new JSONObject("{'digest':{'id':1,'type':'.POGOProtos.Data.AssetDigestEntry','repeated':true},'timestamp_ms':{'id':2,'type':'uint64'}}"));
			json.put(".POGOProtos.Networking.Responses.GetDownloadUrlsResponse",new JSONObject("{'download_urls':{'id':1,'type':'.POGOProtos.Data.DownloadUrlEntry','repeated':true}}"));
			json.put(".POGOProtos.Networking.Responses.GetGymDetailsResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_NOT_IN_RANGE':2}"));
			json.put(".POGOProtos.Networking.Responses.GetGymDetailsResponse",new JSONObject("{'gym_state':{'id':1,'type':'.POGOProtos.Data.Gym.GymState'},'name':{'id':2,'type':'string'},'urls':{'id':3,'type':'string','repeated':true},'result':{'id':4,'type':'.POGOProtos.Networking.Responses.GetGymDetailsResponse.Result'},'description':{'id':5,'type':'string'}}"));
			json.put(".POGOProtos.Networking.Responses.GetHatchedEggsResponse",new JSONObject("{'success':{'id':1,'type':'bool'},'pokemon_id':{'id':2,'type':'uint64','packed':true,'repeated':true},'experience_awarded':{'id':3,'type':'int32','repeated':true},'candy_awarded':{'id':4,'type':'int32','repeated':true},'stardust_awarded':{'id':5,'type':'int32','repeated':true}}"));
			json.put(".POGOProtos.Networking.Responses.GetIncensePokemonResponse.Result",new JSONObject("{'INCENSE_ENCOUNTER_UNKNOWN':0,'INCENSE_ENCOUNTER_AVAILABLE':1,'INCENSE_ENCOUNTER_NOT_AVAILABLE':2}"));
			json.put(".POGOProtos.Networking.Responses.GetIncensePokemonResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.GetIncensePokemonResponse.Result'},'pokemon_type_id':{'id':2,'type':'int32'},'latitude':{'id':3,'type':'double'},'longitude':{'id':4,'type':'double'},'encounter_location':{'id':5,'type':'string'},'encounter_id':{'id':6,'type':'uint64'},'disappear_timestamp_ms':{'id':7,'type':'int64'}}"));
			json.put(".POGOProtos.Networking.Responses.GetInventoryResponse",new JSONObject("{'success':{'id':1,'type':'bool'},'inventory_delta':{'id':2,'type':'.POGOProtos.Inventory.InventoryDelta'}}"));
			json.put(".POGOProtos.Networking.Responses.GetMapObjectsResponse",new JSONObject("{'map_cells':{'id':1,'type':'.POGOProtos.Map.MapCell','repeated':true},'status':{'id':2,'type':'.POGOProtos.Map.MapObjectsStatus'}}"));
			json.put(".POGOProtos.Networking.Responses.GetPlayerProfileResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1}"));
			json.put(".POGOProtos.Networking.Responses.GetPlayerProfileResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.GetPlayerProfileResponse.Result'},'start_time':{'id':2,'type':'int64'},'badges':{'id':3,'type':'.POGOProtos.Data.PlayerBadge','repeated':true}}"));
			json.put(".POGOProtos.Networking.Responses.GetPlayerResponse",new JSONObject("{'success':{'id':1,'type':'bool'},'player_data':{'id':2,'type':'.POGOProtos.Data.PlayerData'}}"));
			json.put(".POGOProtos.Networking.Responses.GetSuggestedCodenamesResponse",new JSONObject("{'codenames':{'id':1,'type':'string','repeated':true},'success':{'id':2,'type':'bool'}}"));
			json.put(".POGOProtos.Networking.Responses.IncenseEncounterResponse.Result",new JSONObject("{'INCENSE_ENCOUNTER_UNKNOWN':0,'INCENSE_ENCOUNTER_SUCCESS':1,'INCENSE_ENCOUNTER_NOT_AVAILABLE':2,'POKEMON_INVENTORY_FULL':3}"));
			json.put(".POGOProtos.Networking.Responses.IncenseEncounterResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.IncenseEncounterResponse.Result'},'pokemon_data':{'id':2,'type':'.POGOProtos.Data.PokemonData'},'capture_probability':{'id':3,'type':'.POGOProtos.Data.Capture.CaptureProbability'}}"));
			json.put(".POGOProtos.Networking.Responses.LevelUpRewardsResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'AWARDED_ALREADY':2}"));
			json.put(".POGOProtos.Networking.Responses.LevelUpRewardsResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.LevelUpRewardsResponse.Result'},'items_awarded':{'id':2,'type':'.POGOProtos.Inventory.ItemAward','repeated':true},'items_unlocked':{'id':4,'type':'.POGOProtos.Inventory.ItemId','repeated':true}}"));
			json.put(".POGOProtos.Networking.Responses.MarkTutorialCompleteResponse",new JSONObject("{'success':{'id':1,'type':'bool'},'player_data':{'id':2,'type':'.POGOProtos.Data.PlayerData'}}"));
			json.put(".POGOProtos.Networking.Responses.NicknamePokemonResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_INVALID_NICKNAME':2,'ERROR_POKEMON_NOT_FOUND':3,'ERROR_POKEMON_IS_EGG':4}"));
			json.put(".POGOProtos.Networking.Responses.NicknamePokemonResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.NicknamePokemonResponse.Result'}}"));
			json.put(".POGOProtos.Networking.Responses.PlayerUpdateResponse",new JSONObject("{'wild_pokemons':{'id':1,'type':'.POGOProtos.Map.Pokemon.WildPokemon','repeated':true},'forts':{'id':2,'type':'.POGOProtos.Map.Fort.FortData','repeated':true},'forts_nearby':{'id':3,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Responses.RecycleInventoryItemResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_NOT_ENOUGH_COPIES':2,'ERROR_CANNOT_RECYCLE_INCUBATORS':3}"));
			json.put(".POGOProtos.Networking.Responses.RecycleInventoryItemResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.RecycleInventoryItemResponse.Result'},'new_count':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Responses.ReleasePokemonResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'POKEMON_DEPLOYED':2,'FAILED':3,'ERROR_POKEMON_IS_EGG':4}"));
			json.put(".POGOProtos.Networking.Responses.ReleasePokemonResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.ReleasePokemonResponse.Result'},'candy_awarded':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Responses.SetAvatarResponse.Status",new JSONObject("{'UNSET':0,'SUCCESS':1,'AVATAR_ALREADY_SET':2,'FAILURE':3}"));
			json.put(".POGOProtos.Networking.Responses.SetAvatarResponse",new JSONObject("{'status':{'id':1,'type':'.POGOProtos.Networking.Responses.SetAvatarResponse.Status'},'player_data':{'id':2,'type':'.POGOProtos.Data.PlayerData'}}"));
			json.put(".POGOProtos.Networking.Responses.SetContactSettingsResponse.Status",new JSONObject("{'UNSET':0,'SUCCESS':1,'FAILURE':2}"));
			json.put(".POGOProtos.Networking.Responses.SetContactSettingsResponse",new JSONObject("{'status':{'id':1,'type':'.POGOProtos.Networking.Responses.SetContactSettingsResponse.Status'},'player_data':{'id':2,'type':'.POGOProtos.Data.PlayerData'}}"));
			json.put(".POGOProtos.Networking.Responses.SetFavoritePokemonResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_POKEMON_NOT_FOUND':2,'ERROR_POKEMON_IS_EGG':3}"));
			json.put(".POGOProtos.Networking.Responses.SetFavoritePokemonResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.SetFavoritePokemonResponse.Result'}}"));
			json.put(".POGOProtos.Networking.Responses.SetPlayerTeamResponse.Status",new JSONObject("{'UNSET':0,'SUCCESS':1,'TEAM_ALREADY_SET':2,'FAILURE':3}"));
			json.put(".POGOProtos.Networking.Responses.SetPlayerTeamResponse",new JSONObject("{'status':{'id':1,'type':'.POGOProtos.Networking.Responses.SetPlayerTeamResponse.Status'},'player_data':{'id':2,'type':'.POGOProtos.Data.PlayerData'}}"));
			json.put(".POGOProtos.Networking.Responses.StartGymBattleResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_GYM_NOT_FOUND':2,'ERROR_GYM_NEUTRAL':3,'ERROR_GYM_WRONG_TEAM':4,'ERROR_GYM_EMPTY':5,'ERROR_INVALID_DEFENDER':6,'ERROR_TRAINING_INVALID_ATTACKER_COUNT':7,'ERROR_ALL_POKEMON_FAINTED':8,'ERROR_TOO_MANY_BATTLES':9,'ERROR_TOO_MANY_PLAYERS':10,'ERROR_GYM_BATTLE_LOCKOUT':11,'ERROR_PLAYER_BELOW_MINIMUM_LEVEL':12,'ERROR_NOT_IN_RANGE':13}"));
			json.put(".POGOProtos.Networking.Responses.StartGymBattleResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.StartGymBattleResponse.Result'},'battle_start_timestamp_ms':{'id':2,'type':'int64'},'battle_end_timestamp_ms':{'id':3,'type':'int64'},'battle_id':{'id':4,'type':'string'},'defender':{'id':5,'type':'.POGOProtos.Data.Battle.BattleParticipant'},'battle_log':{'id':6,'type':'.POGOProtos.Data.Battle.BattleLog'}}"));
			json.put(".POGOProtos.Networking.Responses.UpgradePokemonResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_POKEMON_NOT_FOUND':2,'ERROR_INSUFFICIENT_RESOURCES':3,'ERROR_UPGRADE_NOT_AVAILABLE':4,'ERROR_POKEMON_IS_DEPLOYED':5}"));
			json.put(".POGOProtos.Networking.Responses.UpgradePokemonResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.UpgradePokemonResponse.Result'},'upgraded_pokemon':{'id':2,'type':'.POGOProtos.Data.PokemonData'}}"));
			json.put(".POGOProtos.Networking.Responses.UseIncenseResponse.Result",new JSONObject("{'UNKNOWN':0,'SUCCESS':1,'INCENSE_ALREADY_ACTIVE':2,'NONE_IN_INVENTORY':3,'LOCATION_UNSET':4}"));
			json.put(".POGOProtos.Networking.Responses.UseIncenseResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.UseIncenseResponse.Result'},'applied_incense':{'id':2,'type':'.POGOProtos.Inventory.AppliedItem'}}"));
			json.put(".POGOProtos.Networking.Responses.UseItemCaptureResponse",new JSONObject("{'success':{'id':1,'type':'bool'},'item_capture_mult':{'id':2,'type':'double'},'item_flee_mult':{'id':3,'type':'double'},'stop_movement':{'id':4,'type':'bool'},'stop_attack':{'id':5,'type':'bool'},'target_max':{'id':6,'type':'bool'},'target_slow':{'id':7,'type':'bool'}}"));
			json.put(".POGOProtos.Networking.Responses.UseItemEggIncubatorResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_INCUBATOR_NOT_FOUND':2,'ERROR_POKEMON_EGG_NOT_FOUND':3,'ERROR_POKEMON_ID_NOT_EGG':4,'ERROR_INCUBATOR_ALREADY_IN_USE':5,'ERROR_POKEMON_ALREADY_INCUBATING':6,'ERROR_INCUBATOR_NO_USES_REMAINING':7}"));
			json.put(".POGOProtos.Networking.Responses.UseItemEggIncubatorResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.UseItemEggIncubatorResponse.Result'},'egg_incubator':{'id':2,'type':'.POGOProtos.Inventory.EggIncubator'}}"));
			json.put(".POGOProtos.Networking.Responses.UseItemGymResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_CANNOT_USE':2,'ERROR_NOT_IN_RANGE':3}"));
			json.put(".POGOProtos.Networking.Responses.UseItemGymResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.UseItemGymResponse.Result'},'updated_gp':{'id':2,'type':'int64'}}"));
			json.put(".POGOProtos.Networking.Responses.UseItemPotionResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_NO_POKEMON':2,'ERROR_CANNOT_USE':3,'ERROR_DEPLOYED_TO_FORT':4}"));
			json.put(".POGOProtos.Networking.Responses.UseItemPotionResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.UseItemPotionResponse.Result'},'stamina':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Responses.UseItemReviveResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_NO_POKEMON':2,'ERROR_CANNOT_USE':3,'ERROR_DEPLOYED_TO_FORT':4}"));
			json.put(".POGOProtos.Networking.Responses.UseItemReviveResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.UseItemReviveResponse.Result'},'stamina':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Networking.Responses.UseItemXpBoostResponse.Result",new JSONObject("{'UNSET':0,'SUCCESS':1,'ERROR_INVALID_ITEM_TYPE':2,'ERROR_XP_BOOST_ALREADY_ACTIVE':3,'ERROR_NO_ITEMS_REMAINING':4,'ERROR_LOCATION_UNSET':5}"));
			json.put(".POGOProtos.Networking.Responses.UseItemXpBoostResponse",new JSONObject("{'result':{'id':1,'type':'.POGOProtos.Networking.Responses.UseItemXpBoostResponse.Result'},'applied_items':{'id':2,'type':'.POGOProtos.Inventory.AppliedItems'}}"));
			json.put(".POGOProtos.Settings.DownloadSettingsAction",new JSONObject("{'hash':{'id':1,'type':'string'}}"));
			json.put(".POGOProtos.Settings.FortSettings",new JSONObject("{'interaction_range_meters':{'id':1,'type':'double'},'max_total_deployed_pokemon':{'id':2,'type':'int32'},'max_player_deployed_pokemon':{'id':3,'type':'int32'},'deploy_stamina_multiplier':{'id':4,'type':'double'},'deploy_attack_multiplier':{'id':5,'type':'double'},'far_interaction_range_meters':{'id':6,'type':'double'}}"));
			json.put(".POGOProtos.Settings.GlobalSettings",new JSONObject("{'fort_settings':{'id':2,'type':'.POGOProtos.Settings.FortSettings'},'map_settings':{'id':3,'type':'.POGOProtos.Settings.MapSettings'},'level_settings':{'id':4,'type':'.POGOProtos.Settings.LevelSettings'},'inventory_settings':{'id':5,'type':'.POGOProtos.Settings.InventorySettings'},'minimum_client_version':{'id':6,'type':'string'}}"));
			json.put(".POGOProtos.Settings.InventorySettings",new JSONObject("{'max_pokemon':{'id':1,'type':'int32'},'max_bag_items':{'id':2,'type':'int32'},'base_pokemon':{'id':3,'type':'int32'},'base_bag_items':{'id':4,'type':'int32'},'base_eggs':{'id':5,'type':'int32'}}"));
			json.put(".POGOProtos.Settings.LevelSettings",new JSONObject("{'trainer_cp_modifier':{'id':2,'type':'double'},'trainer_difficulty_modifier':{'id':3,'type':'double'}}"));
			json.put(".POGOProtos.Settings.MapSettings",new JSONObject("{'pokemon_visible_range':{'id':1,'type':'double'},'poke_nav_range_meters':{'id':2,'type':'double'},'encounter_range_meters':{'id':3,'type':'double'},'get_map_objects_min_refresh_seconds':{'id':4,'type':'float'},'get_map_objects_max_refresh_seconds':{'id':5,'type':'float'},'get_map_objects_min_distance_meters':{'id':6,'type':'float'},'google_maps_api_key':{'id':7,'type':'string'}}"));
			json.put(".POGOProtos.Settings.Master.BadgeSettings",new JSONObject("{'badge_type':{'id':1,'type':'.POGOProtos.Enums.BadgeType'},'badge_rank':{'id':2,'type':'int32'},'targets':{'id':3,'type':'int32','repeated':true}}"));
			json.put(".POGOProtos.Settings.Master.CameraSettings",new JSONObject("{'next_camera':{'id':1,'type':'string'},'interpolation':{'id':2,'type':'.POGOProtos.Enums.CameraInterpolation','repeated':true},'target_type':{'id':3,'type':'.POGOProtos.Enums.CameraTarget','repeated':true},'ease_in_speed':{'id':4,'type':'float','repeated':true},'east_out_speed':{'id':5,'type':'float','repeated':true},'duration_seconds':{'id':6,'type':'float','repeated':true},'wait_seconds':{'id':7,'type':'float','repeated':true},'transition_seconds':{'id':8,'type':'float','repeated':true},'angle_degree':{'id':9,'type':'float','repeated':true},'angle_offset_degree':{'id':10,'type':'float','repeated':true},'pitch_degree':{'id':11,'type':'float','repeated':true},'pitch_offset_degree':{'id':12,'type':'float','repeated':true},'roll_degree':{'id':13,'type':'float','repeated':true},'distance_meters':{'id':14,'type':'float','repeated':true},'height_percent':{'id':15,'type':'float','repeated':true},'vert_ctr_ratio':{'id':16,'type':'float','repeated':true}}"));
			json.put(".POGOProtos.Settings.Master.EncounterSettings",new JSONObject("{'spin_bonus_threshold':{'id':1,'type':'float'},'excellent_throw_threshold':{'id':2,'type':'float'},'great_throw_threshold':{'id':3,'type':'float'},'nice_throw_threshold':{'id':4,'type':'float'},'milestone_threshold':{'id':5,'type':'int32'}}"));
			json.put(".POGOProtos.Settings.Master.EquippedBadgeSettings",new JSONObject("{'equip_badge_cooldown_ms':{'id':1,'type':'int64'},'catch_probability_bonus':{'id':2,'type':'float','repeated':true},'flee_probability_bonus':{'id':3,'type':'float','repeated':true}}"));
			json.put(".POGOProtos.Settings.Master.GymBattleSettings",new JSONObject("{'energy_per_sec':{'id':1,'type':'float'},'dodge_energy_cost':{'id':2,'type':'float'},'retarget_seconds':{'id':3,'type':'float'},'enemy_attack_interval':{'id':4,'type':'float'},'attack_server_interval':{'id':5,'type':'float'},'round_duration_seconds':{'id':6,'type':'float'},'bonus_time_per_ally_seconds':{'id':7,'type':'float'},'maximum_attackers_per_battle':{'id':8,'type':'int32'},'same_type_attack_bonus_multiplier':{'id':9,'type':'float'},'maximum_energy':{'id':10,'type':'int32'},'energy_delta_per_health_lost':{'id':11,'type':'float'},'dodge_duration_ms':{'id':12,'type':'int32'},'minimum_player_level':{'id':13,'type':'int32'},'swap_duration_ms':{'id':14,'type':'int32'}}"));
			json.put(".POGOProtos.Settings.Master.GymLevelSettings",new JSONObject("{'required_experience':{'id':1,'type':'int32','repeated':true},'leader_slots':{'id':2,'type':'int32','repeated':true},'trainer_slots':{'id':3,'type':'int32','repeated':true},'search_roll_bonus':{'id':4,'type':'int32','repeated':true}}"));
			json.put(".POGOProtos.Settings.Master.IapItemDisplay",new JSONObject("{'sku':{'id':1,'type':'string'},'category':{'id':2,'type':'.POGOProtos.Enums.HoloIapItemCategory'},'sort_order':{'id':3,'type':'int32'},'item_ids':{'id':4,'type':'.POGOProtos.Inventory.ItemId','repeated':true},'counts':{'id':5,'type':'int32','repeated':true}}"));
			json.put(".POGOProtos.Settings.Master.IapSettings",new JSONObject("{'daily_bonus_coins':{'id':1,'type':'int32'},'daily_defender_bonus_per_pokemon':{'id':2,'type':'int32','repeated':true},'daily_defender_bonus_max_defenders':{'id':3,'type':'int32'},'daily_defender_bonus_currency':{'id':4,'type':'string','repeated':true},'min_time_between_claims_ms':{'id':5,'type':'int64'},'daily_bonus_enabled':{'id':6,'type':'bool'},'daily_defender_bonus_enabled':{'id':7,'type':'bool'}}"));
			json.put(".POGOProtos.Settings.Master.Item.BattleAttributes",new JSONObject("{'sta_percent':{'id':1,'type':'float'}}"));
			json.put(".POGOProtos.Settings.Master.Item.EggIncubatorAttributes",new JSONObject("{'incubator_type':{'id':1,'type':'.POGOProtos.Inventory.EggIncubatorType'},'uses':{'id':2,'type':'int32'},'distance_multiplier':{'id':3,'type':'float'}}"));
			json.put(".POGOProtos.Settings.Master.Item.ExperienceBoostAttributes",new JSONObject("{'xp_multiplier':{'id':1,'type':'float'},'boost_duration_ms':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Settings.Master.Item.FoodAttributes",new JSONObject("{'item_effect':{'id':1,'type':'.POGOProtos.Enums.ItemEffect','repeated':true},'item_effect_percent':{'id':2,'type':'float','repeated':true},'growth_percent':{'id':3,'type':'float'}}"));
			json.put(".POGOProtos.Settings.Master.Item.FortModifierAttributes",new JSONObject("{'modifier_lifetime_seconds':{'id':1,'type':'int32'},'troy_disk_num_pokemon_spawned':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Settings.Master.Item.IncenseAttributes",new JSONObject("{'incense_lifetime_seconds':{'id':1,'type':'int32'},'pokemon_type':{'id':2,'type':'.POGOProtos.Enums.PokemonType','repeated':true},'pokemon_incense_type_probability':{'id':3,'type':'float'},'standing_time_between_encounters_seconds':{'id':4,'type':'int32'},'moving_time_between_encounter_seconds':{'id':5,'type':'int32'},'distance_required_for_shorter_interval_meters':{'id':6,'type':'int32'},'pokemon_attracted_length_sec':{'id':7,'type':'int32'}}"));
			json.put(".POGOProtos.Settings.Master.Item.InventoryUpgradeAttributes",new JSONObject("{'additional_storage':{'id':1,'type':'int32'},'upgrade_type':{'id':2,'type':'.POGOProtos.Inventory.InventoryUpgradeType'}}"));
			json.put(".POGOProtos.Settings.Master.Item.PokeballAttributes",new JSONObject("{'item_effect':{'id':1,'type':'.POGOProtos.Enums.ItemEffect'},'capture_multi':{'id':2,'type':'float'},'capture_multi_effect':{'id':3,'type':'float'},'item_effect_mod':{'id':4,'type':'float'}}"));
			json.put(".POGOProtos.Settings.Master.Item.PotionAttributes",new JSONObject("{'sta_percent':{'id':1,'type':'float'},'sta_amount':{'id':2,'type':'int32'}}"));
			json.put(".POGOProtos.Settings.Master.Item.ReviveAttributes",new JSONObject("{'sta_percent':{'id':1,'type':'float'}}"));
			json.put(".POGOProtos.Settings.Master.ItemSettings",new JSONObject("{'item_id':{'id':1,'type':'.POGOProtos.Inventory.ItemId'},'item_type':{'id':2,'type':'.POGOProtos.Inventory.ItemType'},'category':{'id':3,'type':'.POGOProtos.Enums.ItemCategory'},'drop_freq':{'id':4,'type':'float'},'drop_trainer_level':{'id':5,'type':'int32'},'pokeball':{'id':6,'type':'.POGOProtos.Settings.Master.Item.PokeballAttributes'},'potion':{'id':7,'type':'.POGOProtos.Settings.Master.Item.PotionAttributes'},'revive':{'id':8,'type':'.POGOProtos.Settings.Master.Item.ReviveAttributes'},'battle':{'id':9,'type':'.POGOProtos.Settings.Master.Item.BattleAttributes'},'food':{'id':10,'type':'.POGOProtos.Settings.Master.Item.FoodAttributes'},'inventory_upgrade':{'id':11,'type':'.POGOProtos.Settings.Master.Item.InventoryUpgradeAttributes'},'xp_boost':{'id':12,'type':'.POGOProtos.Settings.Master.Item.ExperienceBoostAttributes'},'incense':{'id':13,'type':'.POGOProtos.Settings.Master.Item.IncenseAttributes'},'egg_incubator':{'id':14,'type':'.POGOProtos.Settings.Master.Item.EggIncubatorAttributes'},'fort_modifier':{'id':15,'type':'.POGOProtos.Settings.Master.Item.FortModifierAttributes'}}"));
			json.put(".POGOProtos.Settings.Master.MoveSequenceSettings",new JSONObject("{'sequence':{'id':1,'type':'string','repeated':true}}"));
			json.put(".POGOProtos.Settings.Master.MoveSettings",new JSONObject("{'movement_id':{'id':1,'type':'.POGOProtos.Enums.PokemonMovementType'},'animation_id':{'id':2,'type':'int32'},'pokemon_type':{'id':3,'type':'.POGOProtos.Enums.PokemonType'},'power':{'id':4,'type':'float'},'accuracy_chance':{'id':5,'type':'float'},'critical_chance':{'id':6,'type':'float'},'heal_scalar':{'id':7,'type':'float'},'stamina_loss_scalar':{'id':8,'type':'float'},'trainer_level_min':{'id':9,'type':'int32'},'trainer_level_max':{'id':10,'type':'int32'},'vfx_name':{'id':11,'type':'string'},'duration_ms':{'id':12,'type':'int32'},'damage_window_start_ms':{'id':13,'type':'int32'},'damage_window_end_ms':{'id':14,'type':'int32'},'energy_delta':{'id':15,'type':'int32'}}"));
			json.put(".POGOProtos.Settings.Master.PlayerLevelSettings",new JSONObject("{'rank_num':{'id':1,'type':'int32','repeated':true},'required_experience':{'id':2,'type':'int32','repeated':true},'cp_multiplier':{'id':3,'type':'float','repeated':true},'max_egg_player_level':{'id':4,'type':'int32'},'max_encounter_player_level':{'id':5,'type':'int32'}}"));
			json.put(".POGOProtos.Settings.Master.Pokemon.CameraAttributes",new JSONObject("{'disk_radius_m':{'id':1,'type':'float'},'cylinder_radius_m':{'id':2,'type':'float'},'cylinder_height_m':{'id':3,'type':'float'},'cylinder_ground_m':{'id':4,'type':'float'},'shoulder_mode_scale':{'id':5,'type':'float'}}"));
			json.put(".POGOProtos.Settings.Master.Pokemon.EncounterAttributes",new JSONObject("{'base_capture_rate':{'id':1,'type':'float'},'base_flee_rate':{'id':2,'type':'float'},'collision_radius_m':{'id':3,'type':'float'},'collision_height_m':{'id':4,'type':'float'},'collision_head_radius_m':{'id':5,'type':'float'},'movement_type':{'id':6,'type':'.POGOProtos.Enums.PokemonMovementType'},'movement_timer_s':{'id':7,'type':'float'},'jump_time_s':{'id':8,'type':'float'},'attack_timer_s':{'id':9,'type':'float'}}"));
			json.put(".POGOProtos.Settings.Master.Pokemon.StatsAttributes",new JSONObject("{'base_stamina':{'id':1,'type':'int32'},'base_attack':{'id':2,'type':'int32'},'base_defense':{'id':3,'type':'int32'},'dodge_energy_delta':{'id':8,'type':'int32'}}"));
			json.put(".POGOProtos.Settings.Master.PokemonSettings",new JSONObject("{'pokemon_id':{'id':1,'type':'.POGOProtos.Enums.PokemonId'},'model_scale':{'id':3,'type':'float'},'type':{'id':4,'type':'.POGOProtos.Enums.PokemonType'},'type_2':{'id':5,'type':'.POGOProtos.Enums.PokemonType'},'camera':{'id':6,'type':'.POGOProtos.Settings.Master.Pokemon.CameraAttributes'},'encounter':{'id':7,'type':'.POGOProtos.Settings.Master.Pokemon.EncounterAttributes'},'stats':{'id':8,'type':'.POGOProtos.Settings.Master.Pokemon.StatsAttributes'},'quick_moves':{'id':9,'type':'.POGOProtos.Enums.PokemonMove','repeated':true},'cinematic_moves':{'id':10,'type':'.POGOProtos.Enums.PokemonMove','repeated':true},'animation_time':{'id':11,'type':'float','repeated':true},'evolution_ids':{'id':12,'type':'.POGOProtos.Enums.PokemonId','repeated':true},'evolution_pips':{'id':13,'type':'int32'},'class':{'id':14,'type':'.POGOProtos.Enums.PokemonClass'},'pokedex_height_m':{'id':15,'type':'float'},'pokedex_weight_kg':{'id':16,'type':'float'},'parent_pokemon_id':{'id':17,'type':'.POGOProtos.Enums.PokemonId'},'height_std_dev':{'id':18,'type':'float'},'weight_std_dev':{'id':19,'type':'float'},'km_distance_to_hatch':{'id':20,'type':'float'},'family_id':{'id':21,'type':'.POGOProtos.Enums.PokemonFamilyId'},'candy_to_evolve':{'id':22,'type':'int32'}}"));
			json.put(".POGOProtos.Settings.Master.PokemonUpgradeSettings",new JSONObject("{'upgrades_per_level':{'id':1,'type':'int32'},'allowed_levels_above_player':{'id':2,'type':'int32'},'candy_cost':{'id':3,'type':'int32','repeated':true},'stardust_cost':{'id':4,'type':'int32','repeated':true}}"));
			json.put(".POGOProtos.Settings.Master.TypeEffectiveSettings",new JSONObject("{'attack_scalar':{'id':1,'type':'float','repeated':true},'attack_type':{'id':2,'type':'.POGOProtos.Enums.PokemonType'}}"));
		}
		catch (Exception ex)
		{
			ex.printStackTrace();
		}

		return json;
	}
}

